{"version":3,"sources":["interface/user/type.ts","common/link/index.ts","public/not-found-404.tsx","app/dashboard/index.tsx","config/index.ts","interface/user/utils.ts","interface/user/data.ts","interface/profile/mock-data.ts","interface/profile/data.ts","admin/profile/index.tsx","admin/layout/footer.tsx","app/layout/top-nav.tsx","app/layout/left-nav.tsx","app/layout/index.tsx","app/index.tsx","admin/dashboard/index.tsx","admin/user/index.tsx","admin/layout/top-nav.tsx","admin/layout/left-nav.tsx","admin/layout/index.tsx","admin/index.tsx","interface/crud/config.ts","interface/crud/mock-data.ts","superadmin/superadmin.tsx","superadmin/index.tsx","interface/login/mock-data.ts","interface/login/data.ts","public/login/partials/error/error.styles.ts","public/login/partials/error/error.tsx","public/login/partials/error/index.ts","public/login/partials/extra-content/index.tsx","public/login/index.tsx","public/logout/index.tsx","public/sign-up/partials/extra-content/index.tsx","public/sign-up/index.tsx","public/index.tsx","router.tsx","theme.js","serviceWorker.js","index.tsx"],"names":["Status","toRouteApp","s","toRouteAdmin","toRouteSuperAdmin","toRoutePublic","App","base","default","dashboard","profile","Admin","user","SuperAdmin","instance","permission","entity","Public","login","logout","forgotYourPassword","signUp","className","Typography","variant","Layout","UI","Dashboard","Simple","title","appTitle","process","REACT_APP_APP_TITLE","gitHubRepoUrl","REACT_APP_GITHUB_REPO_URL","T","pending","active","inactive","Stateful","RequestUtil","Crud","withUuid","Wrapper","RequestWrapper","update","data","console","log","Promise","resolve","firstName","lastName","email","uuid","detail","a","r","Mock","Request","get","UserService","passwordUpdate","oldPassword","newPassword","ProfilePage","updateProfilePromise","Data","updatePasswordPromise","ProfilePageLoader","Load","WithLoader","dataLoad","Component","sha","Footer","Nav","Copyright","link","company","Top","useStyles","Utils","makeStyles","theme","appBar","backgroundColor","palette","background","paper","useTheme","classes","menus","Links","Icon","LockOutlinedIcon","UserIcon","LogoutIcon","isOpen","textColor","primary","main","drawer","paddingTop","spacing","menuItem","color","contrastText","label","Left","Drawer","Menu","Divider","Label","children","listMain","Link","Dashboardicon","permissions","Credentials","getPermissions","sort","b","onClose","classNames","hideToggleButton","list","filter","x","includes","icon","item","root","display","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","container","minHeight","paddingBottom","props","Container","maxWidth","Auth","REDIRECT_URI","Conf","withRouter","useIdleTimer","Store","set","location","pathname","window","path","component","Profile","to","NotFound","UserManagement","urlPrefix","withBackend","InvestorIcon","DashboardIcon","listSuperAdmin","PermissionIcon","InstanceIcon","EntityIcon","CssBaseline","User","entities","Instance","name","dateAdded","status","id","lang","Permission","PermissionInstance","apiUrl","mockData","MockData","toRoute","locale","post","re","ErrorContainer","styled","div","ErrorMessage","p","Error","remove","role","marginTop","contentContainer","padding","width","secondary","fontSize","typography","h5","marginBottom","paddingLeft","titleContainer","textAlign","success","divider","margin","linkContainer","ExtraContent","map","i","List","key","ListItem","ListItemIcon","ListItemText","Login","history","useHistory","layout","otherContent","FormSimple","password","fields","type","ux","promise","then","push","submitLabel","message","error","useEffect","intro","useState","state","setState","Logout","SignUp","History","basename","R","maxSnack","createMuiTheme","Boolean","hostname","match","ReactDOM","render","withCssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qLAUYA,E,yDCLNC,EAAa,SAACC,GAAD,MALH,OAK4BA,GACtCC,EAAe,SAACD,GAAD,MALH,SAK8BA,GAC1CE,EAAoB,SAACF,GAAD,MALH,cAKmCA,GACpDG,EAAgB,SAACH,GAAD,MALH,IAK+BA,GAErCI,EAAM,CACjBC,KAXc,OAYdC,QAASP,EAAW,KACpBQ,UAAWR,EAAW,cACtBS,QAAST,EAAW,aAGTU,EAAQ,CACnBJ,KAjBgB,SAkBhBC,QAASL,EAAa,KACtBM,UAAWN,EAAa,cACxBO,QAASP,EAAa,YACtBS,KAAMT,EAAa,UAGRU,EAAa,CACxBN,KAxBqB,cAyBrBO,SAAUV,EAAkB,aAC5BW,WAAYX,EAAkB,eAC9BY,OAAQZ,EAAkB,YAGfa,EAAS,CACpBV,KA9BiB,IA+BjBW,MAAOb,EAAc,SACrBc,OAAQd,EAAc,UACtBe,mBAAoBf,EAAc,sBAClCgB,OAAQhB,EAAc,Y,QCjCT,aACb,OACE,yBAAKiB,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACA,qHCLFC,EAAWC,KAAXD,OAUOE,EARG,WAChB,OACE,kBAACF,EAAOG,OAAR,CAAeC,MAAM,aACnB,kBAACN,EAAA,EAAD,6B,yBCVOO,EAAWC,oOAAYC,qBAAuB,cAK9CC,EAAgBF,oOAAYG,0B,iBJK7BlC,O,mBAAAA,I,uBAAAA,I,sBAAAA,M,KKLJmC,EAASC,QAITD,EAASE,OAITF,EAASG,SCLP,IAAIC,WAASC,YAAYC,KAAKC,SAAqB,QAKzDH,WAHFC,YACEG,QAAWC,eDRR,IC4DMC,EAAS,SAACC,GAGnB,OADAC,QAAQC,IAAI,cAAeF,GACpBG,QAAQC,SAAQ,IChEdxC,EAAmB,CAC9ByC,UAAW,OACXC,SAAU,MACVC,MAAO,uBACPC,KAAM,SCGOV,EAEXL,WAHFC,YACEG,QAAWC,eAIFW,EAAM,uCAAG,sBAAAC,EAAA,+EAEX,IAAIP,SAAQ,SAAAQ,GAAC,OAAIA,EAAEC,OAFR,gCAKbd,EAAeL,WAASoB,QAAQC,IAAI,cALvB,2CAAH,qDAQNf,EAAM,uCAAG,WAAOC,GAAP,SAAAU,EAAA,6DAElBT,QAAQC,IAAI,iBAAkBF,GAFZ,kBAGXG,QAAQC,SAAQ,IAHL,gCAMbW,EAAmBf,IANN,2CAAH,sDASNgB,EAAiB,SAC5BC,EACAC,GAIE,OADAjB,QAAQC,IAAI,kBAAmBe,EAAaC,GACrCf,QAAQC,SAAQ,ICzBrBe,EAAc,SAAC,GAAqB,IAAnBnB,EAAkB,EAAlBA,KACrB,OACE,kBAAC,WAASmB,YAAV,CACEnB,KAAMA,EACNoB,qBAAsBC,EACtBC,sBAAuBD,KAcdE,EATW,WACxB,OACE,kBAAC,OAAEC,KAAKC,WAAR,CACEC,SAAUL,IACVM,UAAWR,K,SClBXS,EAAc3C,2CAWL4C,EATA,kBACb,kBAAC,KAAGC,IAAID,OAAOA,OAAf,KACE,kBAAC,KAAGC,IAAID,OAAOE,UAAf,CACEH,IAAK,CAAEA,MAAKI,MAPAJ,EAOeA,EAPhB,UAAoBzC,EAApB,mBAA4CyC,KAQvDK,QAASjD,KARE,IAAC4C,G,wECMTM,EACLtD,KADFkD,IAAOI,IAGHC,EAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CC,OAAQ,CACNC,gBAAiBF,EAAMG,QAAQC,WAAWC,WAI/B,aACb,IAAML,EAAQM,MACRC,EAAUV,IAEVW,EAAQ,CACZ,CAAEd,KAAMe,EAAiBtF,KAAMuF,KAAMC,KACrC,CAAEjB,KAAMe,EAAUnF,QAASoF,KAAME,KACjC,CAAElB,KAAMe,EAAa1E,OAAQ2E,KAAMG,MAGrC,OACE,kBAACjB,EAAD,CACEnD,MAAOC,EACP8D,MAAOA,EACPtE,UAAWqE,EAAQN,OACnBa,QAAM,EACNC,UAAWf,EAAMG,QAAQa,QAAQC,Q,kBC3BjCpB,EAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CkB,OAAQ,CACNhB,gBAAiBF,EAAMG,QAAQa,QAAQC,KACvCE,WAAYnB,EAAMoB,QAAQ,IAE5BC,SAAU,CACRC,MAAM,GAAD,OAAKtB,EAAMG,QAAQa,QAAQO,aAA3B,gBAEPC,MAAO,CACLF,MAAO,a,EAePhF,KAHFkD,IACEiC,KAAQC,G,EAAAA,OAAQC,G,EAAAA,KAAMC,G,EAAAA,QAIpBC,GAAQ,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SACTvB,EAAUV,IAEhB,OAAO,0BAAM3D,UAAWqE,EAAQiB,OAAQM,IAGpCC,GAAoB,CACxB,CACErC,KAAMsC,EAAS3G,UACfmG,MAAO,kBAAC,GAAD,kBACPd,KAAMuB,IACNtG,WAAY,QAID,cACb,IAAM4E,EAAUV,IAGVqC,EACJ/E,WAASgF,YAAYC,iBAAiBC,MAAK,SAACjE,EAAWkE,GACrD,OAAIlE,EAAIkE,GACE,EAGNlE,EAAIkE,EACC,EAGF,MACH,GAER,OACE,kBAACZ,GAAD,CACEZ,QAAQ,EACRyB,QAAS,aACTC,WAAY,CAAEnC,MAAOE,EAAQW,QAC7BuB,kBAAkB,GAElB,kBAACb,GAAD,MACA,kBAACD,GAAD,CACEe,KAAMX,GAASY,QAAO,SAAAC,GAAC,OAAIV,EAAYW,SAASD,EAAEjH,eAClD6G,WAAY,CAAEM,KAAMvC,EAAQc,SAAU0B,KAAMxC,EAAQc,cCpEtDxB,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CgD,KAAM,CACJC,QAAS,QAEXC,aAAclD,EAAMmD,OAAOC,QAC3BC,QAAS,CACPC,SAAU,GAEZrC,KAAM,CACJsC,OAAQ,OACRC,SAAU,QAEZC,UAAW,CACTC,UAAW,4BACXvC,WAAYnB,EAAMoB,QAAQ,GAC1BuC,cAAe3D,EAAMoB,QAAQ,QAiClB/E,OAzBf,SAAgBuH,GACd,IAAMrD,EAAUV,KAERiC,EAAa8B,EAAb9B,SAER,OACE,yBAAK5F,UAAWqE,EAAQyC,MACtB,kBAAC,EAAD,MACA,kBAAC,GAAD,MAEA,yBAAK9G,UAAWqE,EAAQ8C,SACtB,0BAAMnH,UAAWqE,EAAQU,MACvB,yBAAK/E,UAAWqE,EAAQ2C,eAExB,kBAACW,EAAA,EAAD,CAAWC,SAAS,KAAK5H,UAAWqE,EAAQkD,WACzC3B,GAGH,kBAAC,EAAD,UC/BAvE,GAENJ,WAFF4G,KAAQxG,QACAyG,GACN7G,WADF8G,KAAQD,aA2BKE,mBAAW3G,IAxB1B,SAAaqG,GASX,OAFA9D,QAAMqE,cANe,WACnBhH,WAASiH,MAAMC,IAAI,kBAAkB,GACrClH,WAASiH,MAAMC,IAAIL,GAAcJ,EAAMU,SAASC,UAChDC,OAAOF,SAASC,SAAW9D,EAAa1E,SAGT,IAG/B,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0I,KAAMhE,EAAUpF,UAAWqJ,UAAWnI,IAC7C,kBAAC,IAAD,CAAOkI,KAAMhE,EAAUnF,QAASoJ,UAAWC,IAE3C,kBAAC,IAAD,CAAOF,KAAI,UAAKhE,EAAUtF,KAAf,MACT,kBAAC,IAAD,CAAUyJ,GAAInE,EAAUpF,aAE1B,kBAAC,IAAD,CAAOoJ,KAAMhE,EAAUtF,KAAMuJ,UAAWG,QAMT,QC1C/BxI,GAAWC,KAAXD,OAUOE,GARG,WAChB,OACE,kBAAC,GAAOC,OAAR,CAAeC,MAAM,aACnB,kBAACN,EAAA,EAAD,6BCGS2I,GAPQ,kBACrB,kBAAC,iBAAevJ,MAAhB,CACEwJ,UAAWtE,EAAYtF,KACvB6J,aZN+C,K,UaO1CpF,GACLtD,KADFkD,IAAOI,IAGHC,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CC,OAAQ,CACNC,gBAAiBF,EAAMG,QAAQC,WAAWC,WAK/B,cACb,IAAML,EAAQM,MACRC,EAAUV,KAEVW,EAAQ,CACZ,CAAEd,KAAMe,EAAYnF,QAASoF,KAAME,KACnC,CAAElB,KAAMe,EAAa1E,OAAQ2E,KAAMG,MAGrC,OACE,kBAAC,GAAD,CACEpE,MAAOC,EACP8D,MAAOA,EACPtE,UAAWqE,EAAQN,OACnBa,QAAM,EACNC,UAAWf,EAAMG,QAAQa,QAAQC,Q,kDCpBjCL,GAAWqE,KAEXpF,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CkB,OAAQ,CACNhB,gBAAiBF,EAAMG,QAAQa,QAAQC,KACvCE,WAAYnB,EAAMoB,QAAQ,IAE5BC,SAAU,CACRC,MAAM,GAAD,OAAKtB,EAAMG,QAAQa,QAAQO,aAA3B,gBAEPC,MAAO,CACLF,MAAO,a,GAePhF,KAHFkD,IACEiC,KAAQC,G,GAAAA,OAAQC,G,GAAAA,KAAMC,G,GAAAA,QAOpBC,GAAQ,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SACTvB,EAAUV,KAEhB,OAAO,0BAAM3D,UAAWqE,EAAQiB,OAAQM,IAGpCC,GAAoB,CACxB,CACErC,KAAMsC,EAAW3G,UACjBmG,MAAO,kBAAC,GAAD,kBACPd,KAAMwE,KACNvJ,WAde,SAgBjB,CACE+D,KAAMsC,EAAWxG,KACjBgG,MAAO,kBAAC,GAAD,cACPd,KAAME,GACNjF,WApBe,UAwBbwJ,GAA0B,CAC9B,CACEzF,KAAMsC,EAAgBrG,WACtB6F,MAAO,kBAAC,GAAD,oBACPd,KAAM0E,KACNzJ,WA5ByB,cA8B3B,CACE+D,KAAMsC,EAAgBtG,SACtB8F,MAAO,kBAAC,GAAD,iBACPd,KAAM2E,KACN1J,WAlCyB,cAoC3B,CACE+D,KAAMsC,EAAgBpG,OACtB4F,MAAO,kBAAC,GAAD,iBACPd,KAAM4E,KACN3J,WAxCyB,eA4Cd,cACb,IAAM4E,EAAUV,KAGVqC,EACJ/E,WAASgF,YAAYC,iBAAiBC,MAAK,SAACjE,EAAWkE,GACrD,OAAIlE,EAAIkE,GACE,EAGNlE,EAAIkE,EACC,EAGF,MACH,GAER,OACE,kBAAC,GAAD,CACExB,QAAQ,EACRyB,QAAS,aACTC,WAAY,CAAEnC,MAAOE,EAAQW,QAC7BuB,kBAAkB,GAElB,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEC,KAAMX,GAASY,QAAO,SAAAC,GAAC,OAAIV,EAAYW,SAASD,EAAEjH,eAClD6G,WAAY,CAAEM,KAAMvC,EAAQc,SAAU0B,KAAMxC,EAAQc,YAGtD,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEqB,KAAMyC,GAAexC,QAAO,SAAAC,GAAC,OAAIV,EAAYW,SAASD,EAAEjH,eACxD6G,WAAY,CAAEM,KAAMvC,EAAQc,SAAU0B,KAAMxC,EAAQc,cC/GtDxB,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CgD,KAAM,CACJC,QAAS,QAEXC,aAAclD,EAAMmD,OAAOC,QAC3BC,QAAS,CACPC,SAAU,GAEZrC,KAAM,CACJsC,OAAQ,OACRC,SAAU,QAEZC,UAAW,CACTC,UAAW,4BACXvC,WAAYnB,EAAMoB,QAAQ,GAC1BuC,cAAe3D,EAAMoB,QAAQ,QAmClB/E,OA3Bf,SAAgBuH,GACd,IAAMrD,EAAUV,KAERiC,EAAa8B,EAAb9B,SAER,OACE,yBAAK5F,UAAWqE,EAAQyC,MACtB,kBAACuC,GAAA,EAAD,MAEA,kBAAC,GAAD,MACA,kBAAC,GAAD,MAEA,yBAAKrJ,UAAWqE,EAAQ8C,SACtB,0BAAMnH,UAAWqE,EAAQU,MACvB,yBAAK/E,UAAWqE,EAAQ2C,eAExB,kBAACW,EAAA,EAAD,CAAWC,SAAS,KAAK5H,UAAWqE,EAAQkD,WACzC3B,GAGH,kBAAC,EAAD,UCjCAvE,GAENJ,WAFF4G,KAAQxG,QACAyG,GACN7G,WADF8G,KAAQD,aAiCKE,mBAAW3G,IA9B1B,SAAeqG,GASb,OAFA9D,QAAMqE,cANe,WACnBhH,WAASiH,MAAMC,IAAI,kBAAkB,GACrClH,WAASiH,MAAMC,IAAIL,GAAcJ,EAAMU,SAASC,UAChDC,OAAOF,SAASC,SAAW9D,EAAa1E,SAGT,IAG/B,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE0I,KAAMhE,EAAYpF,UAClBqJ,UAAWnI,GACXqH,MAAOA,IAET,kBAAC,IAAD,CAAOa,KAAMhE,EAAYjF,KAAMkJ,UAAWc,GAAM5B,MAAOA,IAEvD,kBAAC,IAAD,CAAOa,KAAMhE,EAAYnF,QAASoJ,UAAWC,IAE7C,kBAAC,IAAD,CAAOF,KAAI,UAAKhE,EAAYtF,KAAjB,MACT,kBAAC,IAAD,CAAUyJ,GAAInE,EAAYpF,aAE5B,kBAAC,IAAD,CAAOoJ,KAAMhE,EAAYtF,KAAMuJ,UAAWG,QAMT,UCd5BY,GAAW,GCtCX/H,GAA0B,CACrCgI,SAAU,CACRhD,KAAM,CACJ,CACExE,KAAM,QACNyH,KAAM,mBACNC,UAAW,wBAEb,CACE1H,KAAM,QACNyH,KAAM,mBACNC,UAAW,0BAIjBJ,KAAM,CACJ9C,KAAM,CACJ,CACExE,KAAM,cACNH,UAAW,OACXC,SAAU,MACVC,MAAO,uBACP4H,OAAQ,CAAEC,GAAI,GACdpK,SAAU,CACRwC,KAAM,SAER6H,KAAM,MAER,CACE7H,KAAM,cACNH,UAAW,OACXC,SAAU,MACVC,MAAO,uBACP4H,OAAQ,CAAEC,GAAI,GACdpK,SAAU,CACRwC,KAAM,SAER6H,KAAM,QAIZC,WAAY,CACVtD,KAAM,CACJ,CACExE,KAAM,oBACNyH,KAAM,OAER,CACEzH,KAAM,oBACNyH,KAAM,SAER,CACEzH,KAAM,oBACNyH,KAAM,gBAIZM,mBAAoB,CAClBvD,KAAM,CACJ,CACExE,KAAM,6BACNxC,SAAU,CACRwC,KAAM,SAERvC,WAAY,CACVuC,KAAM,sBAGV,CACEA,KAAM,6BACNxC,SAAU,CACRwC,KAAM,SAERvC,WAAY,CACVuC,KAAM,sBAGV,CACEA,KAAM,6BACNxC,SAAU,CACRwC,KAAM,SAERvC,WAAY,CACVuC,KAAM,yBCnEDzC,GAVI,kBACjB,kBAAC,iBAAeA,WAAhB,CACEyK,OAAO,yBACPT,SAAUA,GACVV,UAAWtE,EAAiBtF,KAC5B6J,anBV+C,EmBW/CmB,SAAUC,MCGJ7I,GAENJ,WAFF4G,KAAQxG,QACAyG,GACN7G,WADF8G,KAAQD,aAGJqC,GAAU,eAAChI,EAAD,uDAAK,IAAL,OAAaoC,EAAYtF,KAAOkD,GAyBjC6F,mBAAW3G,IAvB1B,SAA0BqG,GASxB,OAFA9D,QAAMqE,cANe,WACnBhH,WAASiH,MAAMC,IAAI,kBAAkB,GACrClH,WAASiH,MAAMC,IAAIL,GAAcJ,EAAMU,SAASC,UAChDC,OAAOF,SAASC,SAAW9D,EAAa1E,SAGT,IAG/B,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0I,KAAMhE,EAAiBtF,KAAMuJ,UAAWjJ,KAE/C,kBAAC,IAAD,CAAOgJ,KAAM4B,GAAQ,MACnB,kBAAC,IAAD,CAAUzB,GAAInE,EAAYpF,aAE5B,kBAAC,IAAD,CAAOoJ,KAAM4B,KAAW3B,UAAWG,QAMS,e,UC9CvCvJ,GAAU,CACrBwK,GAAI,eACJ5H,KAAM,eACNH,UAAW,OACXC,SAAU,MACVC,MAAO,uBACP8H,KAAM,KACNrK,SAAU,CAAEwC,KAAM,YAAayH,KAAM,kBAG1BW,GAAwB,KAExBpE,GAAc,CAAC,MAAO,QAAS,cCN/BpG,GAAK,uCAAG,WAAO4B,GAAP,eAAAU,EAAA,6DAEjBjB,WAASgF,YAAYkC,IACnB+B,GACAA,GACAA,IALe,kBAQVvI,QAAQC,SAAQ,IARN,uBAWFX,WAASoB,QAAQgI,KAAK,SAAU7I,GAX9B,cAWb8I,EAXa,OAYnBrJ,WAASgF,YAAYkC,IAAImC,EAAGlL,QAASkL,EAAGtE,YAAasE,EAAGF,OAAOX,MAZ5C,mBAcZ,GAdY,2CAAH,sD,odCJlB,IAAMc,GAAiBC,WAAOC,IAAV,MAYdC,GAAeF,WAAOG,EAAV,MCRVzC,GAAUjH,WAAViH,MCJO0C,GDWD,SAAClD,GAAkB,IACvB+B,EAAmB/B,EAAnB+B,KAAM7D,EAAa8B,EAAb9B,SAEd,OAAwB,IAApBsC,GAAM5F,IAAImH,GACL,MAGTvB,GAAM2C,OAAOpB,GACbhI,QAAQC,IAAI+H,GAGV,kBAACc,GAAD,KACE,kBAACG,GAAD,CAAcI,KAAK,SAASlF,M,6DEX5BjC,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CyD,UAAW,CACTwD,UAAWjH,EAAMoB,SAAS,IAE5B8F,iBAAkB,CAChBhH,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1C8G,QAASnH,EAAMoB,QAAQ,GACvBgG,MAAO,OAET3K,MAAO,CACL6E,MAAOtB,EAAMG,QAAQkH,UAAUpG,KAC/BqG,SAAUtH,EAAMuH,WAAWC,GAAGF,SAC9BG,aAAczH,EAAMoB,QAAQ,GAC5BsG,YAAa1H,EAAMoB,QAAQ,IAE7BuG,eAAgB,CACdC,UAAW,UAEb9E,KAAM,CACJxB,MAAOtB,EAAMG,QAAQ0H,QAAQ5G,MAE/B6G,QAAS,CACPC,OAAQ/H,EAAMoB,QAAQ,EAAG,QACzB0C,SAAU,OAEZkE,cAAe,CACbJ,UAAW,UAEblI,KAAM,CACJ4B,MAAOtB,EAAMG,QAAQkH,UAAUpG,UAI3Be,GAAS1F,KAAT0F,KA8COiG,GA5CM,WACnB,IAAM1H,EAAUV,KAQhB,OACE,yBAAK3D,UAAWqE,EAAQkD,WACtB,yBAAKvH,UAAWqE,EAAQ2G,kBACtB,yBAAKhL,UAAWqE,EAAQoH,gBACtB,kBAACxL,EAAA,EAAD,CAAYuI,UAAU,KAAKxI,UAAWqE,EAAQ9D,OAA9C,uBAVmB,CACzB,6BACA,iDACA,iDAYcyL,KAAI,SAAC5F,EAAG6F,GAAJ,OACZ,kBAACC,GAAA,EAAD,CAAMC,IAAG,kBAAaF,IACpB,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWrM,UAAWqE,EAAQuC,QAEhC,kBAAC0F,GAAA,EAAD,KAAelG,QAKrB,kBAAC,KAAD,CAASpG,UAAWqE,EAAQuH,UAE5B,yBAAK5L,UAAWqE,EAAQyH,eACtB,kBAAC7L,EAAA,EAAD,kCAC6B,IAC3B,kBAAC6F,GAAD,CAAM4C,GAAInE,EAAaxE,OAAQC,UAAWqE,EAAQb,MAAlD,oBCtENG,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CyD,UAAW,CACTK,SAAU,QACViE,OAAQ,UAEVD,QAAS,CACPC,OAAQ/H,EAAMoB,QAAQ,EAAG,IAE3B4G,cAAe,CACbJ,UAAW,cAIPvL,GAAiBC,KAAjBD,OAAQ2F,GAAS1F,KAAT0F,KAmEDyG,GAjED,WACZ,IAAMlI,EAAUV,KACV6I,EAAUC,cA2BhB,OACE,kBAAC,GAAOF,MAAR,CACEhM,MAAK,mBAAcC,GACnBkM,OAAO,OACPC,aAAc,kBAAC,GAAD,OAEd,yBAAK3M,UAAWqE,EAAQkD,WACtB,kBAAC,GAAD,CAAOkC,KAAK,eAAZ,qCACA,kBAAC,GAAD,CAAOA,KAAK,kBAAZ,4EAKA,kBAAC,WAASmD,WAAV,CACEpL,KAzBsB,CAC5BO,MAAO,GACP8K,SAAU,IAwBJC,OAxCwB,CAC9B,CACExH,MAAO,gBACPmE,KAAM,QACNsD,KAAM,UAER,CACEzH,MAAO,WACPmE,KAAM,WACNsD,KAAM,SACNC,GAAI,aA+BAC,QAtBY,SAACzL,GACnB,OAAOqB,GAAWrB,GAAM0L,MAAK,SAAA/K,GAC3BqK,EAAQW,KAAK5I,EAAUpF,eAqBnBiO,YAAY,QACZC,QAAS,CACP1B,QAAS,yBACT2B,MAAO,iCAIX,kBAAC,KAAD,CAAStN,UAAWqE,EAAQuH,UAE5B,yBAAK5L,UAAWqE,EAAQyH,eACtB,kBAAC,GAAD,CAAMpD,GAAInE,EAAazE,oBAAvB,6BC5EFmG,GAAuBhF,WAAvBgF,YAAaiC,GAAUjH,WAAViH,MAEN,cAWb,OAVAqF,qBAAU,WNcD5L,QAAQC,SAAQ,GMZvBqE,GAAY4E,SAGP3C,GAAM5F,IAAI,mBACb4F,GAAMC,IAAI,eAAe,KAE1B,IAEI,kBAAC,IAAD,CAAUO,GAAInE,EAAatF,Q,UCP9B0E,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CyD,UAAW,CACTwD,UAAWjH,EAAMoB,SAAS,IAE5B8F,iBAAkB,CAChBhH,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1C8G,QAASnH,EAAMoB,QAAQ,GACvBgG,MAAO,OAET3K,MAAO,CACL6E,MAAOtB,EAAMG,QAAQkH,UAAUpG,KAC/BqG,SAAUtH,EAAMuH,WAAWC,GAAGF,SAC9BG,aAAczH,EAAMoB,QAAQ,GAC5BsG,YAAa1H,EAAMoB,QAAQ,IAE7BuG,eAAgB,CACdC,UAAW,UAEb9E,KAAM,CACJxB,MAAOtB,EAAMG,QAAQ0H,QAAQ5G,MAE/B6G,QAAS,CACPC,OAAQ/H,EAAMoB,QAAQ,EAAG,QACzB0C,SAAU,OAEZkE,cAAe,CACbJ,UAAW,UAEblI,KAAM,CACJ4B,MAAOtB,EAAMG,QAAQkH,UAAUpG,UAI3Be,GAAS1F,KAAT0F,KA8COiG,GA5CM,WACnB,IAAM1H,EAAUV,KAQhB,OACE,yBAAK3D,UAAWqE,EAAQkD,WACtB,yBAAKvH,UAAWqE,EAAQ2G,kBACtB,yBAAKhL,UAAWqE,EAAQoH,gBACtB,kBAACxL,EAAA,EAAD,CAAYuI,UAAU,KAAKxI,UAAWqE,EAAQ9D,OAA9C,uBAVmB,CACzB,6BACA,iDACA,iDAYcyL,KAAI,SAAC5F,EAAG6F,GAAJ,OACZ,kBAACC,GAAA,EAAD,CAAMC,IAAG,kBAAaF,IACpB,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAWrM,UAAWqE,EAAQuC,QAEhC,kBAAC0F,GAAA,EAAD,KAAelG,QAKrB,kBAAC,KAAD,CAASpG,UAAWqE,EAAQuH,UAE5B,yBAAK5L,UAAWqE,EAAQyH,eACtB,kBAAC7L,EAAA,EAAD,gCAC2B,IACzB,kBAAC,GAAD,CAAMyI,GAAInE,EAAa3E,MAAOI,UAAWqE,EAAQb,MAAjD,cCtENG,GAAYC,QAAMC,YAAW,SAAAC,GAAK,MAAK,CAC3CyD,UAAW,CACTK,SAAU,QACViE,OAAQ,UAEVwB,QAAS,CACP3B,UAAW,UAEblI,KAAM,CACJ4B,MAAOtB,EAAMG,QAAQkH,UAAUpG,MAEjCyI,MAAO,CACLzC,UAAWjH,EAAMoB,SAAS,GAC1BwG,UAAW,SAEX,WAAY,CACVtG,MAAOtB,EAAMG,QAAQkH,UAAUpG,OAGnC+G,cAAe,CACbJ,UAAW,UAEbE,QAAS,CACPC,OAAQ/H,EAAMoB,QAAQ,EAAG,QAIrB/E,GAAiBC,KAAjBD,OAAQ2F,GAAS1F,KAAT0F,KAqFDyG,GAnFD,WAAoB,IAAD,EACLkB,mBAA+B,WAD1B,oBACxBC,EADwB,KACjBC,EADiB,KAEzBtJ,EAAUV,KAwChB,OACE,kBAAC,GAAO4I,MAAR,CACEhM,MAAM,sBACNmM,OAAO,OACPC,aAAc,kBAAC,GAAD,OAEd,yBAAK3M,UAAWqE,EAAQkD,WACX,WAAVmG,EACC,kBAACzN,EAAA,EAAD,CAAYD,UAAWqE,EAAQgJ,SAA/B,8BAC8B,IAC5B,kBAAC,GAAD,CAAM3E,GAAInE,EAAa3E,MAAOI,UAAWqE,EAAQb,MAAjD,eAKF,oCACE,kBAACvD,EAAA,EAAD,CAAYD,UAAWqE,EAAQmJ,OAA/B,WACU,gCAAShN,IAEnB,kBAAC,WAASoM,WAAV,CACEpL,KAlCwB,CAClCK,UAAW,GACXC,SAAU,GACVC,MAAO,GACP8K,SAAU,IA+BAC,OA3D0B,CACpC,CACExH,MAAO,aACPmE,KAAM,YACNsD,KAAM,UAER,CACEzH,MAAO,YACPmE,KAAM,WACNsD,KAAM,UAER,CACEzH,MAAO,gBACPmE,KAAM,QACNsD,KAAM,UAER,CACEzH,MAAO,WACPmE,KAAM,WACNsD,KAAM,SACNC,GAAI,aAwCIC,QA7BS,SAACzL,GACpB,OR7COG,QAAQC,SAAQ,GQ6CEsL,MAAK,SAAA/K,GAE5B,OADAwL,EAAS,WACF,MA2BCP,YAAY,UACZC,QAAS,CACP1B,QAAS,yBACT2B,MAAO,mCAGX,kBAAC,KAAD,CAAStN,UAAWqE,EAAQuH,UAE5B,yBAAK5L,UAAWqE,EAAQyH,eACtB,kBAAC,GAAD,CAAMpD,GAAInE,EAAa3E,OAAvB,sBCzFCoI,oBAbf,SAAgBN,GACd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,KAAMhE,EAAa3E,MAAO4I,UAAW+D,GAAO7E,MAAOA,IAC1D,kBAAC,IAAD,CAAOa,KAAMhE,EAAa1E,OAAQ2I,UAAWoF,GAAQlG,MAAOA,IAC5D,kBAAC,IAAD,CAAOa,KAAMhE,EAAaxE,OAAQyI,UAAWqF,GAAQnG,MAAOA,IAC5D,kBAAC,IAAD,CAAOa,KAAMhE,EAAatF,MACxB,kBAAC,IAAD,CAAUyJ,GAAInE,EAAa3E,aCF7B4M,GAAUsB,IAA6B,CAC3CC,SAAUtN,0BAoBNuN,GAAIhG,aAjBO,SAACN,GAChB,OACE,kBAAC,mBAAD,CAAkBuG,SAAU,GAC1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO1F,KAAMhE,EAAUtF,KAAMuJ,UAAWxJ,GAAK0I,MAAOA,IACpD,kBAAC,IAAD,CAAOa,KAAMhE,EAAYtF,KAAMuJ,UAAWnJ,GAAOqI,MAAOA,IACxD,kBAAC,IAAD,CACEa,KAAMhE,EAAiBtF,KACvBuJ,UAAWjJ,GACXmI,MAAOA,IAET,kBAAC,IAAD,CAAOa,KAAMhE,EAAatF,KAAMuJ,UAAW7I,GAAQ+H,MAAOA,SAQnD,qBACb,kBAAC,IAAD,CAAQ8E,QAASA,IACf,kBAACwB,GAAD,Q,UCxBWlK,G,OAlBDoK,GAAe,CAC3BjK,QAAS,CACP8I,KAAM,QACNjI,QAAS,CACPC,KAAM,WAERoG,UAAW,CACTpG,KAAM,WAERb,WAAY,CACVhF,QAAS,WAEXyM,QAAS,CACP5G,KAAM,cCHQoJ,QACW,cAA7B7F,OAAOF,SAASgG,UAEe,UAA7B9F,OAAOF,SAASgG,UAEhB9F,OAAOF,SAASgG,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,gBAAD,CAAezK,MAAOA,GAAO0K,iBAAe,GAC1C,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,MAAK,SAAC4B,GAClCA,EAAaC,kB","file":"static/js/main.fd246110.chunk.js","sourcesContent":["import { OptionSet, Uuid } from '@nexys/material-components/dist/common/type';\nimport * as CT from 'interface/crud/config';\n\nexport type UserCrud = Omit<CT.User, 'password' | 'logDateAdded' | 'lang'>;\n\nexport type User = Omit<UserCrud, 'status' | 'instance' | 'lang'> & {\n  status: OptionSet;\n  instance: Omit<CT.Instance, 'dateAdded'>;\n};\n\nexport enum Status {\n  active = 1,\n  inactive = 2,\n  pending = 3\n}\n\nexport type UserPermissionCrud = Omit<\n  CT.UserPermission,\n  'logUser' | 'logDateAdded'\n>;\n\nexport interface UserPermission {\n  id: Uuid;\n  name: string;\n  assigned?: Uuid;\n}\n","const appBase = '/app';\nconst adminBase = '/admin';\nconst superAdminBase = '/superadmin';\nconst publicBase = '/';\n\nconst toRouteApp = (s: string) => appBase + s;\nconst toRouteAdmin = (s: string) => adminBase + s;\nconst toRouteSuperAdmin = (s: string) => superAdminBase + s;\nconst toRoutePublic = (s: string) => publicBase + s;\n\nexport const App = {\n  base: appBase,\n  default: toRouteApp('/'),\n  dashboard: toRouteApp('/dashboard'),\n  profile: toRouteApp('/profile')\n};\n\nexport const Admin = {\n  base: adminBase,\n  default: toRouteAdmin('/'),\n  dashboard: toRouteAdmin('/dashboard'),\n  profile: toRouteAdmin('/profile'),\n  user: toRouteAdmin('/user')\n};\n\nexport const SuperAdmin = {\n  base: superAdminBase,\n  instance: toRouteSuperAdmin('/instance'),\n  permission: toRouteSuperAdmin('/permission'),\n  entity: toRouteSuperAdmin('/entity')\n};\n\nexport const Public = {\n  base: publicBase,\n  login: toRoutePublic('login'),\n  logout: toRoutePublic('logout'),\n  forgotYourPassword: toRoutePublic('forgotten-password'),\n  signUp: toRoutePublic('sign-up')\n};\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nexport default () => {\n  return (\n    <div className=\"col s12\">\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <Typography variant=\"h4\">Page not found</Typography>\n          <p>\n            Maybe the page you are looking for has been removed, or you typed in\n            the wrong URL\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { UI } from '@nexys/material-components';\n\nconst { Layout } = UI;\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <Layout.Simple title=\"Dashboard\">\n      <Typography>You're ready to go</Typography>\n    </Layout.Simple>\n  );\n};\n\nexport default Dashboard;\n","export const appTitle = process.env.REACT_APP_APP_TITLE || 'Awesome App';\n\nexport const withBackend =\n  process.env.REACT_APP_WITH_BACKEND === 'false' ? false : true;\n\nexport const gitHubRepoUrl = process.env.REACT_APP_GITHUB_REPO_URL;\n\nexport const instanceUuid = '';\n","import { OptionSet, Uuid } from '@nexys/material-components/dist/common/type';\nimport * as T from './type';\n\nexport const statuses: OptionSet[] = [\n  {\n    id: T.Status.pending,\n    name: 'Pending'\n  },\n  {\n    id: T.Status.active,\n    name: 'Active'\n  },\n  {\n    id: T.Status.inactive,\n    name: 'Inactive'\n  }\n];\n\nexport const postProcessing = (item: T.UserCrud): T.User => {\n  const status = statuses.filter(x => x.id === item.status.id)[0];\n\n  return {\n    ...item,\n    status,\n    instance: {\n      uuid: item.instance.uuid,\n      name: ''\n    }\n  };\n};\n\n/**\n * takes output from the query service and formats for assigned business object\n */\nexport const formatAssigned = (\n  input: {\n    uuid: Uuid;\n    name: string;\n    PermissionInstance?: {\n      uuid: Uuid;\n      UserPermission?: { uuid: Uuid }[];\n    }[];\n  }[]\n): T.UserPermission[] => {\n  return input.map(ip => {\n    const assigned: string | undefined =\n      ip.PermissionInstance &&\n      ip.PermissionInstance.length &&\n      ip.PermissionInstance[0].UserPermission &&\n      ip.PermissionInstance[0].UserPermission.length\n        ? ip.PermissionInstance[0].UserPermission[0].uuid\n        : undefined;\n\n    return {\n      id: ip.uuid,\n      name: ip.name,\n      assigned\n    };\n  });\n};\n","import { Id, Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\nimport { instanceUuid, withBackend } from 'config';\n\nimport * as T from './type';\nimport * as U from './utils';\nimport * as MockData from './mock-data';\n\nconst C = new Stateful.RequestUtil.Crud.withUuid<T.UserCrud>('User');\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nconst projection = {\n  status: {}\n};\n\nexport const list = async (): Promise<T.User[]> => {\n  if (!withBackend) {\n    console.log('USER list');\n    return Promise.resolve(MockData.data.map(x => U.postProcessing(x)));\n  }\n\n  const re = await RequestWrapper(C.list({ projection }));\n\n  return re.map(x => U.postProcessing(x));\n};\n\nexport const insert = async (\n  data: Partial<T.User>\n): Promise<{ id: Id | Uuid }> => {\n  if (!withBackend) {\n    console.log('USER insert', data);\n    return Promise.resolve({ id: 'uuid1' });\n  }\n\n  const dataForBackend: Omit<T.UserCrud, 'uuid'> = {\n    firstName: data.firstName!,\n    lastName: data.lastName!,\n    email: data.email!,\n    status: { id: data.status!.id },\n    instance: {\n      uuid: instanceUuid\n    }\n  };\n\n  const re = await RequestWrapper(C.insertByUuid(dataForBackend));\n  return { id: re.uuid };\n};\n\nexport const detail = async (id: Id | Uuid): Promise<T.User> => {\n  if (!withBackend) {\n    console.log('USER detail', id);\n    const item = MockData.data.find(x => x.uuid === id);\n    return Promise.resolve(U.postProcessing(item || MockData.data[0]));\n  }\n\n  const re = await RequestWrapper(C.detail({ uuid: String(id) }));\n  return U.postProcessing(re);\n};\n\nexport const update = (data: Partial<T.User>): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('USER update', data);\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: Omit<T.UserCrud, 'status' | 'instance'> = {\n    uuid: data.uuid!,\n    firstName: data.firstName!,\n    lastName: data.lastName!,\n    email: data.email!\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n\nexport const deleteById = (id: Id | Uuid): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('USER delete', id);\n    return Promise.resolve(true);\n  }\n\n  return RequestWrapper(C.deleteByUuid(String(id)));\n};\n\nexport const statusList = () => {\n  return Promise.resolve(U.statuses);\n};\n\nexport const statusUpdate = async (\n  uuid: Uuid,\n  optionId: Id\n): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('statusUpdate', uuid, optionId);\n\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: Pick<T.UserCrud, 'uuid' | 'status'> = {\n    uuid,\n    status: { id: optionId }\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n","import { Profile } from './type';\n\nexport const profile: Profile = {\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com',\n  uuid: 'myuid'\n};\n","import { Stateful } from '@nexys/material-components';\nimport { withBackend } from 'config';\n\nimport * as UserService from 'interface/user/data';\nimport { Profile } from './type';\nimport * as Mock from './mock-data';\n\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nexport const detail = async (): Promise<Profile> => {\n  if (!withBackend) {\n    return new Promise(r => r(Mock.profile));\n  }\n\n  return RequestWrapper(Stateful.Request.get('/profile'));\n};\n\nexport const update = async (data: Profile): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('profile update', data);\n    return Promise.resolve(true);\n  }\n\n  return UserService.update(data);\n};\n\nexport const passwordUpdate = (\n  oldPassword: string,\n  newPassword: string\n): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('password update', oldPassword, newPassword);\n    return Promise.resolve(true);\n  }\n\n  return RequestWrapper(\n    Stateful.Request.post('/profile/password/change', {\n      old: oldPassword,\n      password: newPassword\n    })\n  );\n};\n","import React from 'react';\n\nimport { Data as D, SimpleUI } from '@nexys/material-components';\n\nimport * as Data from 'interface/profile/data';\nimport * as T from 'interface/profile/type';\n\ninterface Props {\n  data: T.Profile;\n}\n\nconst ProfilePage = ({ data }: Props) => {\n  return (\n    <SimpleUI.ProfilePage<T.Profile>\n      data={data}\n      updateProfilePromise={Data.update}\n      updatePasswordPromise={Data.passwordUpdate}\n    />\n  );\n};\n\nconst ProfilePageLoader = () => {\n  return (\n    <D.Load.WithLoader<T.Profile>\n      dataLoad={Data.detail()}\n      Component={ProfilePage}\n    />\n  );\n};\n\nexport default ProfilePageLoader;\n","import React from 'react';\n\nimport { UI } from '@nexys/material-components';\nimport { appTitle, gitHubRepoUrl } from 'config';\n\nconst shaToUrl = (sha: string) => `${gitHubRepoUrl}/commit/${sha}`;\n\nconst sha: string = process.env.REACT_APP_GIT_SHA || 'sha_placeholder';\n\nconst Footer = () => (\n  <UI.Nav.Footer.Footer>\n    <UI.Nav.Footer.Copyright\n      sha={{ sha, link: shaToUrl(sha) }}\n      company={appTitle}\n    />\n  </UI.Nav.Footer.Footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport UserIcon from '@material-ui/icons/Person';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { appTitle } from 'config';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const menus = [\n    { link: Links.SuperAdmin.base, Icon: LockOutlinedIcon },\n    { link: Links.App.profile, Icon: UserIcon },\n    { link: Links.Public.logout, Icon: LogoutIcon }\n  ];\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      className={classes.appBar}\n      isOpen\n      textColor={theme.palette.primary.main}\n    />\n  );\n};\n","import React from 'react';\n\n// Icon import\nimport Dashboardicon from '@material-ui/icons/Dashboard';\n// end icon\n\nimport { UI, Stateful, Utils } from '@nexys/material-components';\nimport * as Link from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  drawer: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: theme.spacing(8)\n  },\n  menuItem: {\n    color: `${theme.palette.primary.contrastText} !important`\n  },\n  label: {\n    color: 'white'\n  }\n}));\n\ninterface TMenu {\n  link: string;\n  label: React.ReactNode;\n  Icon: any;\n  permission: string;\n}\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu, Divider }\n  }\n} = UI;\n\nconst Label = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  const classes = useStyles();\n\n  return <span className={classes.label}>{children}</span>;\n};\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.App.dashboard,\n    label: <Label>Dashboard</Label>,\n    Icon: Dashboardicon,\n    permission: 'app'\n  }\n];\n\nexport default () => {\n  const classes = useStyles();\n\n  // list of permissions from profile\n  const permissions =\n    Stateful.Credentials.getPermissions().sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    }) || [];\n\n  return (\n    <Drawer\n      isOpen={true}\n      onClose={() => {}}\n      classNames={{ paper: classes.drawer }}\n      hideToggleButton={true}\n    >\n      <Divider />\n      <Menu\n        list={listMain.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport { Utils } from '@nexys/material-components';\n\nimport Footer from '../../admin/layout/footer';\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1\n  },\n  main: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  container: {\n    minHeight: 'calc(100vh - 64px - 72px)', // we need to subtract the height of the topnav and the height of the footer\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nfunction Layout(props: Props) {\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <TopNav />\n      <LeftNav />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n\n          <Footer />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport NotFound from '../public/not-found-404';\nimport Dashboard from './dashboard';\nimport Profile from '../admin/profile';\n\nimport Layout from './layout';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nfunction App(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Links.App.dashboard} component={Dashboard} />\n        <Route path={Links.App.profile} component={Profile} />\n\n        <Route path={`${Links.App.base}/`}>\n          <Redirect to={Links.App.dashboard} />\n        </Route>\n        <Route path={Links.App.base} component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(App, 'app'));\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { UI } from '@nexys/material-components';\n\nconst { Layout } = UI;\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <Layout.Simple title=\"Dashboard\">\n      <Typography>You're ready to go</Typography>\n    </Layout.Simple>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nimport { BusinessModule } from '@nexys/material-components';\nimport { withBackend } from 'config';\nimport * as Links from 'common/link';\n\nconst UserManagement = (): JSX.Element => (\n  <BusinessModule.Admin\n    urlPrefix={Links.Admin.base}\n    withBackend={withBackend}\n  />\n);\n\nexport default UserManagement;\n","import React from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport UserIcon from '@material-ui/icons/Person';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { appTitle } from 'config';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper\n    // boxShadow: 'none'\n  }\n}));\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const menus = [\n    { link: Links.Admin.profile, Icon: UserIcon },\n    { link: Links.Public.logout, Icon: LogoutIcon }\n  ];\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      className={classes.appBar}\n      isOpen\n      textColor={theme.palette.primary.main}\n    />\n  );\n};\n","import React from 'react';\n\n// Icon import\nimport {\n  Dashboard as DashboardIcon,\n  Group as InvestorIcon,\n  VpnKey as PermissionIcon,\n  Storage as InstanceIcon,\n  AccountTree as EntityIcon\n} from '@material-ui/icons';\n// end icon\n\nimport { UI, Stateful, Utils } from '@nexys/material-components';\nimport * as Link from 'common/link';\n\nconst UserIcon = InvestorIcon;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  drawer: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: theme.spacing(8)\n  },\n  menuItem: {\n    color: `${theme.palette.primary.contrastText} !important`\n  },\n  label: {\n    color: 'white'\n  }\n}));\n\ninterface TMenu {\n  link: string;\n  label: React.ReactNode;\n  Icon: any;\n  permission: string;\n}\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu, Divider }\n  }\n} = UI;\n\nconst permission = 'admin';\nconst superAdminPermission = 'superadmin';\n\nconst Label = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  const classes = useStyles();\n\n  return <span className={classes.label}>{children}</span>;\n};\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.Admin.dashboard,\n    label: <Label>Dashboard</Label>,\n    Icon: DashboardIcon,\n    permission\n  },\n  {\n    link: Link.Admin.user,\n    label: <Label>Users</Label>,\n    Icon: UserIcon,\n    permission\n  }\n];\n\nconst listSuperAdmin: TMenu[] = [\n  {\n    link: Link.SuperAdmin.permission,\n    label: <Label>Permissions</Label>,\n    Icon: PermissionIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.instance,\n    label: <Label>Instance</Label>,\n    Icon: InstanceIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.entity,\n    label: <Label>Entities</Label>,\n    Icon: EntityIcon,\n    permission: superAdminPermission\n  }\n];\n\nexport default () => {\n  const classes = useStyles();\n\n  // list of permissions from profile\n  const permissions =\n    Stateful.Credentials.getPermissions().sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    }) || [];\n\n  return (\n    <Drawer\n      isOpen={true}\n      onClose={() => {}}\n      classNames={{ paper: classes.drawer }}\n      hideToggleButton={true}\n    >\n      <Divider />\n      <Menu\n        list={listMain.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n\n      <Divider />\n      <Menu\n        list={listSuperAdmin.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Utils } from '@nexys/material-components';\n\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\nimport Footer from './footer';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1\n  },\n  main: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  container: {\n    minHeight: 'calc(100vh - 64px - 72px)', // we need to subtract the height of the topnav and the height of the footer\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nfunction Layout(props: Props) {\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <TopNav />\n      <LeftNav />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n\n          <Footer />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport Dashboard from './dashboard';\nimport User from './user';\nimport Profile from './profile';\nimport NotFound from '../public/not-found-404';\n\nimport Layout from './layout';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nfunction Admin(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route\n          path={Links.Admin.dashboard}\n          component={Dashboard}\n          props={props}\n        />\n        <Route path={Links.Admin.user} component={User} props={props} />\n\n        <Route path={Links.Admin.profile} component={Profile} />\n\n        <Route path={`${Links.Admin.base}/`}>\n          <Redirect to={Links.Admin.dashboard} />\n        </Route>\n        <Route path={Links.Admin.base} component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(Admin, 'admin'));\n","// This code was generated automatically via the Nexys platform on Fri Mar 19 2021 16:33:53 GMT+0100 (Central European Standard Time), do not alter, regenerate if needed\n\nexport interface User {\n  uuid: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  status: { id: number } | UserStatus;\n  logDateAdded: Date;\n  instance: { uuid: string } | Instance;\n}\n\nexport interface UserStatus {\n  id: number;\n  name: string;\n}\n\nexport interface Instance {\n  uuid: string;\n  name: string;\n  dateAdded: Date;\n}\n\nexport interface Permission {\n  uuid: string;\n  name: string;\n}\n\nexport interface UserPermission {\n  uuid: string;\n  permissionInstance: { uuid: string } | PermissionInstance;\n  user: { uuid: string } | User;\n}\n\nexport interface PermissionInstance {\n  uuid: string;\n  instance: { uuid: string } | Instance;\n  permission: { uuid: string } | Permission;\n}\n\nexport const entities = [];\n","import * as ET from '@nexys/material-components/dist/entity-generator/type';\n\nexport const data: ET.EntityMockData = {\n  Instance: {\n    list: [\n      {\n        uuid: 'uuid1',\n        name: 'Mock Instance #1',\n        dateAdded: '2021-01-02T14:15:00Z'\n      },\n      {\n        uuid: 'uuid2',\n        name: 'Mock Instance #2',\n        dateAdded: '2021-01-05T16:22:00Z'\n      }\n    ]\n  },\n  User: {\n    list: [\n      {\n        uuid: 'user-uuid-1',\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'john.doe@example.com',\n        status: { id: 1 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      },\n      {\n        uuid: 'user-uuid-2',\n        firstName: 'Jane',\n        lastName: 'Doe',\n        email: 'jane.doe@example.com',\n        status: { id: 2 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      }\n    ]\n  },\n  Permission: {\n    list: [\n      {\n        uuid: 'permission-uuid-1',\n        name: 'app'\n      },\n      {\n        uuid: 'permission-uuid-2',\n        name: 'admin'\n      },\n      {\n        uuid: 'permission-uuid-3',\n        name: 'superadmin'\n      }\n    ]\n  },\n  PermissionInstance: {\n    list: [\n      {\n        uuid: 'permission-instance-uuid-1',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-1'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-2',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-2'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-3',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-3'\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\n\nimport { BusinessModule } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { withBackend } from 'config';\nimport { entities } from 'interface/crud/config';\nimport * as MockData from 'interface/crud/mock-data';\n\nconst SuperAdmin = (): JSX.Element => (\n  <BusinessModule.SuperAdmin\n    apiUrl=\"/crud/query/superadmin\"\n    entities={entities}\n    urlPrefix={Links.SuperAdmin.base}\n    withBackend={withBackend}\n    mockData={MockData.data}\n  />\n);\n\nexport default SuperAdmin;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport NotFound from '../public/not-found-404';\nimport Layout from '../admin/layout';\nimport SuperAdmin from './superadmin';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nconst toRoute = (r = '/') => Links.Admin.base + r;\n\nfunction SuperAdminRoutes(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Links.SuperAdmin.base} component={SuperAdmin} />\n\n        <Route path={toRoute('/')}>\n          <Redirect to={Links.Admin.dashboard} />\n        </Route>\n        <Route path={toRoute()} component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(SuperAdminRoutes, 'superadmin'));\n","export const profile = {\n  id: '42010aac0033',\n  uuid: '42010aac0033',\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com',\n  lang: 'en',\n  instance: { uuid: '11eb-9846', name: 'Mock Instance' }\n};\n\nexport const locale = { id: 1, name: 'en' };\n\nexport const permissions = ['app', 'admin', 'superadmin'];\n","import { Stateful } from '@nexys/material-components';\n\nimport { withBackend } from 'config';\nimport * as MockData from './mock-data';\nimport * as T from './type';\n\nexport const login = async (data: Partial<T.User>): Promise<boolean> => {\n  if (!withBackend) {\n    Stateful.Credentials.set(\n      MockData.profile,\n      MockData.permissions,\n      MockData.locale.name\n    );\n\n    return Promise.resolve(true);\n  }\n\n  const re = await Stateful.Request.post('/login', data);\n  Stateful.Credentials.set(re.profile, re.permissions, re.locale.name);\n\n  return true;\n};\n\nexport const logout = (): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return Stateful.Request.get('/login/logout');\n};\n\nexport const signUp = (data: T.User): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return Stateful.Request.post('/login/signup', data);\n};\n","import styled from 'styled-components';\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  background-color: white;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\n  border-radius: 7px;\n  margin-bottom: 30px;\n  padding: 24px;\n`;\n\nconst ErrorMessage = styled.p`\n  background-color: rgba(256, 256, 256);\n  text-align: 'center';\n`;\n\nexport { ErrorContainer, ErrorMessage };\n","import React from 'react';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport { ErrorContainer, ErrorMessage } from './error.styles';\n\nconst { Store } = Stateful;\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n  name: string;\n}\n\nconst Error = (props: Props) => {\n  const { name, children } = props;\n\n  if (Store.get(name) !== true) {\n    return null;\n  }\n\n  Store.remove(name);\n  console.log(name);\n\n  return (\n    <ErrorContainer>\n      <ErrorMessage role=\"alert\">{children}</ErrorMessage>\n    </ErrorContainer>\n  );\n};\n\nexport default Error;\n","import Error from './error';\n\nexport default Error;\n","import React from 'react';\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(-3)\n  },\n  contentContainer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4),\n    width: '60%'\n  },\n  title: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  },\n  titleContainer: {\n    textAlign: 'center'\n  },\n  icon: {\n    color: theme.palette.success.main\n  },\n  divider: {\n    margin: theme.spacing(4, 'auto'),\n    maxWidth: '90%'\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  }\n}));\n\nconst { Link } = UI;\n\nconst ExtraContent = (): JSX.Element => {\n  const classes = useStyles();\n\n  const benefits: string[] = [\n    'Lorem ipsum dolor sit amet',\n    'Nulla orci urna, feugiat convallis iaculis non',\n    'Maecenas sagittis blandit ex, sed condimentum'\n  ];\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.contentContainer}>\n        <div className={classes.titleContainer}>\n          <Typography component=\"h2\" className={classes.title}>\n            Join the community\n          </Typography>\n        </div>\n\n        {benefits.map((b, i) => (\n          <List key={`benefit-${i}`}>\n            <ListItem>\n              <ListItemIcon>\n                <CheckIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText>{b}</ListItemText>\n            </ListItem>\n          </List>\n        ))}\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Typography>\n            Don't have an account yet?{' '}\n            <Link to={Links.Public.signUp} className={classes.link}>\n              Sign up now\n            </Link>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExtraContent;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport { useHistory } from 'react-router-dom';\n\nimport { Field } from '@nexys/material-components/dist/simple-ui/form-simple/type';\nimport { SimpleUI, UI, Utils } from '@nexys/material-components';\n\nimport { appTitle } from 'config';\nimport * as Links from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as Data from 'interface/login/data';\nimport { Error, ExtraContent } from './partials';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    maxWidth: '400px',\n    margin: '0 auto'\n  },\n  divider: {\n    margin: theme.spacing(4, 0)\n  },\n  linkContainer: {\n    textAlign: 'center'\n  }\n}));\n\nconst { Layout, Link } = UI;\n\nconst Login = (): JSX.Element => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const fields: Field<T.User>[] = [\n    {\n      label: 'Email Address',\n      name: 'email',\n      type: 'string'\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'string',\n      ux: 'password'\n    }\n  ];\n\n  const initialValues: T.User = {\n    email: '',\n    password: ''\n  };\n\n  const handleLogin = (data: any) => {\n    return Data.login(data).then(r => {\n      history.push(Links.App.dashboard);\n    });\n  };\n\n  return (\n    <Layout.Login\n      title={`Login to ${appTitle}`}\n      layout=\"left\"\n      otherContent={<ExtraContent />}\n    >\n      <div className={classes.container}>\n        <Error name=\"notifLogout\">You were successfully logged out.</Error>\n        <Error name=\"sessionExpired\">\n          Your session expired. Please login again to continue where you left\n          off.\n        </Error>\n\n        <SimpleUI.FormSimple<T.User>\n          data={initialValues}\n          fields={fields}\n          promise={handleLogin}\n          submitLabel=\"Login\"\n          message={{\n            success: 'Logged in successfully',\n            error: 'Error while trying to login'\n          }}\n        />\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Link to={Links.Public.forgotYourPassword}>\n            Forgot Your Password?\n          </Link>\n        </div>\n      </div>\n    </Layout.Login>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport * as Data from 'interface/login/data';\nimport * as Links from 'common/link';\n\nconst { Credentials, Store } = Stateful;\n\nexport default () => {\n  useEffect(() => {\n    Data.logout();\n    Credentials.remove();\n\n    // so we wouldn't show both messages\n    if (!Store.get('sessionExpired')) {\n      Store.set('notifLogout', true);\n    }\n  }, []);\n\n  return <Redirect to={Links.Public.base} />;\n};\n","import React from 'react';\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(-3)\n  },\n  contentContainer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4),\n    width: '60%'\n  },\n  title: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  },\n  titleContainer: {\n    textAlign: 'center'\n  },\n  icon: {\n    color: theme.palette.success.main\n  },\n  divider: {\n    margin: theme.spacing(4, 'auto'),\n    maxWidth: '90%'\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  }\n}));\n\nconst { Link } = UI;\n\nconst ExtraContent = (): JSX.Element => {\n  const classes = useStyles();\n\n  const benefits: string[] = [\n    'Lorem ipsum dolor sit amet',\n    'Nulla orci urna, feugiat convallis iaculis non',\n    'Maecenas sagittis blandit ex, sed condimentum'\n  ];\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.contentContainer}>\n        <div className={classes.titleContainer}>\n          <Typography component=\"h2\" className={classes.title}>\n            Join the Community\n          </Typography>\n        </div>\n\n        {benefits.map((b, i) => (\n          <List key={`benefit-${i}`}>\n            <ListItem>\n              <ListItemIcon>\n                <CheckIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText>{b}</ListItemText>\n            </ListItem>\n          </List>\n        ))}\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Typography>\n            Already have an account?{' '}\n            <Link to={Links.Public.login} className={classes.link}>\n              Login\n            </Link>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExtraContent;\n","import React, { useState } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Field } from '@nexys/material-components/dist/simple-ui/form-simple/type';\nimport { SimpleUI, UI, Utils } from '@nexys/material-components';\n\nimport { appTitle } from 'config';\nimport * as Links from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as Data from 'interface/login/data';\nimport { ExtraContent } from './partials';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    maxWidth: '400px',\n    margin: '0 auto'\n  },\n  message: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  },\n  intro: {\n    marginTop: theme.spacing(-2),\n    textAlign: 'center',\n\n    '& strong': {\n      color: theme.palette.secondary.main\n    }\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  divider: {\n    margin: theme.spacing(4, 0)\n  }\n}));\n\nconst { Layout, Link } = UI;\n\nconst Login = (): JSX.Element => {\n  const [state, setState] = useState<'default' | 'signUp'>('default');\n  const classes = useStyles();\n\n  const fields: Field<T.SignUpUser>[] = [\n    {\n      label: 'First Name',\n      name: 'firstName',\n      type: 'string'\n    },\n    {\n      label: 'Last Name',\n      name: 'lastName',\n      type: 'string'\n    },\n    {\n      label: 'Email Address',\n      name: 'email',\n      type: 'string'\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'string',\n      ux: 'password'\n    }\n  ];\n\n  const initialValues: T.SignUpUser = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  };\n\n  const handleSignUp = (data: any) => {\n    return Data.signUp(data).then(r => {\n      setState('signUp');\n      return true;\n    });\n  };\n\n  return (\n    <Layout.Login\n      title=\"Create Your Account\"\n      layout=\"left\"\n      otherContent={<ExtraContent />}\n    >\n      <div className={classes.container}>\n        {state === 'signUp' ? (\n          <Typography className={classes.message}>\n            You signed up successfully.{' '}\n            <Link to={Links.Public.login} className={classes.link}>\n              Login here\n            </Link>\n          </Typography>\n        ) : (\n          <>\n            <Typography className={classes.intro}>\n              to join <strong>{appTitle}</strong>\n            </Typography>\n            <SimpleUI.FormSimple<T.SignUpUser>\n              data={initialValues}\n              fields={fields}\n              promise={handleSignUp}\n              submitLabel=\"Sign Up\"\n              message={{\n                success: 'Signed up successfully',\n                error: 'Error while trying to sign up'\n              }}\n            />\n            <Divider className={classes.divider} />\n\n            <div className={classes.linkContainer}>\n              <Link to={Links.Public.login}>Back to Login</Link>\n            </div>\n          </>\n        )}\n      </div>\n    </Layout.Login>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport * as Links from '../common/link';\nimport Login from './login';\nimport Logout from './logout';\nimport SignUp from './sign-up';\n\nfunction Public(props: RouteComponentProps) {\n  return (\n    <Switch>\n      <Route path={Links.Public.login} component={Login} props={props} />\n      <Route path={Links.Public.logout} component={Logout} props={props} />\n      <Route path={Links.Public.signUp} component={SignUp} props={props} />\n      <Route path={Links.Public.base}>\n        <Redirect to={Links.Public.login} />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default withRouter(Public);\n","import React from 'react';\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Router,\n  RouteComponentProps\n} from 'react-router-dom';\nimport * as History from 'history';\n\nimport { SnackbarProvider } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport App from './app';\nimport Admin from './admin';\nimport SuperAdmin from './superadmin';\nimport Public from './public';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst MyRouter = (props: RouteComponentProps) => {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <Switch>\n        <Route path={Links.App.base} component={App} props={props} />\n        <Route path={Links.Admin.base} component={Admin} props={props} />\n        <Route\n          path={Links.SuperAdmin.base}\n          component={SuperAdmin}\n          props={props}\n        />\n        <Route path={Links.Public.base} component={Public} props={props} />\n      </Switch>\n    </SnackbarProvider>\n  );\n};\n\nconst R = withRouter(MyRouter);\n\nexport default () => (\n  <Router history={history}>\n    <R />\n  </Router>\n);\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#5691ff'\n    },\n    secondary: {\n      main: '#1164FD'\n    },\n    background: {\n      default: '#f5f5f5'\n    },\n    success: {\n      main: '#91ff56'\n    }\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppRouter from './router';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from '@nexys/material-components';\n\nReactDOM.render(\n  <ThemeProvider theme={theme} withCssBaseline>\n    <AppRouter />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}