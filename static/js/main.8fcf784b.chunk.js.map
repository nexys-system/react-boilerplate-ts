{"version":3,"sources":["interface/user/type.ts","common/link/index.ts","public/not-found-404.tsx","app/dashboard/index.tsx","config/index.ts","interface/user/utils.ts","interface/user/mock-data.ts","interface/user/data.ts","interface/profile/mock-data.ts","interface/profile/data.ts","admin/profile/index.tsx","admin/layout/footer.tsx","app/layout/top-nav.tsx","app/layout/left-nav.tsx","app/layout/index.tsx","app/index.tsx","admin/dashboard/index.tsx","interface/user/permission.ts","admin/user/index.tsx","interface/permission/mock-data.ts","interface/permission/data.ts","admin/permission/index.tsx","interface/instance/mock-data.ts","interface/instance/data.ts","interface/permission/utils.ts","interface/permission/instance.ts","admin/instance/user/data.ts","admin/instance/user/index.tsx","admin/instance/index.tsx","interface/crud/config.ts","interface/crud/mock-data.ts","admin/entity-generator/index.tsx","admin/layout/top-nav.tsx","admin/layout/left-nav.tsx","admin/layout/index.tsx","admin/index.tsx","interface/login/mock-data.ts","interface/login/data.ts","public/login/partials/error/error.styles.ts","public/login/partials/error/error.tsx","public/login/partials/error/index.ts","public/login/partials/extra-content/index.tsx","public/login/index.tsx","public/logout/index.tsx","public/sign-up/partials/extra-content/index.tsx","public/sign-up/index.tsx","public/index.tsx","router.tsx","theme.js","serviceWorker.js","index.tsx"],"names":["Status","toRouteApp","s","toRouteAdmin","toRoutePublic","App","base","default","dashboard","profile","Admin","user","SuperAdmin","instance","permission","entity","Public","login","logout","forgotYourPassword","signUp","className","Typography","variant","Layout","UI","Dashboard","Simple","title","appTitle","process","REACT_APP_APP_TITLE","gitHubRepoUrl","REACT_APP_GITHUB_REPO_URL","statuses","id","T","pending","name","active","inactive","postProcessing","item","status","filter","x","uuid","data","firstName","lastName","email","C","Stateful","RequestUtil","Crud","withUuid","RequestWrapper","Wrapper","projection","list","a","console","log","Promise","resolve","MockData","map","U","re","insert","dataForBackend","insertByUuid","detail","find","String","update","deleteById","statusList","statusUpdate","optionId","updateByUuid","r","Mock","Request","get","UserService","passwordUpdate","oldPassword","newPassword","ProfilePage","updateProfilePromise","Data","updatePasswordPromise","ProfilePageLoader","Load","WithLoader","dataLoad","Component","sha","Footer","Nav","Copyright","link","company","Top","useStyles","Utils","makeStyles","theme","appBar","backgroundColor","palette","background","paper","useTheme","classes","menus","Links","Icon","UserIcon","LogoutIcon","isOpen","textColor","primary","main","drawer","paddingTop","spacing","menuItem","color","contrastText","label","Left","Drawer","Menu","Divider","Label","children","listMain","Link","Dashboardicon","permissions","Credentials","getPermissions","sort","b","onClose","classNames","hideToggleButton","includes","icon","root","display","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","container","minHeight","paddingBottom","props","Container","maxWidth","Auth","REDIRECT_URI","Conf","withRouter","useIdleTimer","Store","set","location","pathname","window","path","component","Profile","to","NotFound","CrudRequest","CPermissionInstance","pInstanceUuid","assigned","query","Permission","references","PermissionInstance","filters","UserPermission","order","by","post","d","ip","length","undefined","userUuid","permissionUuid","permissionInstance","then","_x","deletePermission","delete","toggle","instanceUuid","permissionInterface","DataPermission","dataInterface","exact","Title","type","User","urlPrefix","extra","_uuid","pList","tab","width","xs","sm","md","lg","Permissions","userPermissions","dateAdded","Date","CPermission","listAssign","params","permissionId","permissionsInterface","updateStatus","userAuthenticationDataInterface","Authentications","DataPermissionInstance","entities","Instance","lang","MyEntityGenerator","withBackend","mockData","InvestorIcon","DashboardIcon","listSuperAdmin","PermissionIcon","InstanceIcon","EntityIcon","CssBaseline","EntityGenerator","locale","ErrorContainer","styled","div","ErrorMessage","p","Error","remove","role","marginTop","contentContainer","padding","secondary","fontSize","typography","h5","marginBottom","paddingLeft","titleContainer","textAlign","success","divider","margin","linkContainer","ExtraContent","i","List","key","ListItem","ListItemIcon","ListItemText","Login","history","useHistory","layout","otherContent","FormSimple","password","fields","ux","promise","push","submitLabel","message","error","useEffect","intro","useState","state","setState","Logout","SignUp","History","basename","R","maxSnack","createMuiTheme","Boolean","hostname","match","ReactDOM","render","withCssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fcf784b.chunk.js","sourcesContent":["import { OptionSet, Uuid } from '@nexys/material-components/dist/common/type';\nimport * as CT from 'interface/crud/config';\n\nexport type UserCrud = Omit<CT.User, 'password' | 'logDateAdded' | 'lang'>;\n\nexport type User = Omit<UserCrud, 'status' | 'instance' | 'lang'> & {\n  status: OptionSet;\n  instance: Omit<CT.Instance, 'dateAdded'>;\n};\n\nexport enum Status {\n  active = 1,\n  inactive = 2,\n  pending = 3\n}\n\nexport type UserPermissionCrud = Omit<\n  CT.UserPermission,\n  'logUser' | 'logDateAdded'\n>;\n\nexport interface UserPermission {\n  id: Uuid;\n  name: string;\n  assigned?: Uuid;\n}\n","const appBase = '/app';\nconst adminBase = '/admin';\nconst publicBase = '/';\n\nconst toRouteApp = (s: string) => appBase + s;\nconst toRouteAdmin = (s: string) => adminBase + s;\nconst toRoutePublic = (s: string) => publicBase + s;\n\nexport const App = {\n  base: appBase,\n  default: toRouteApp('/'),\n  dashboard: toRouteApp('/dashboard'),\n  profile: toRouteApp('/profile')\n};\n\nexport const Admin = {\n  base: adminBase,\n  default: toRouteAdmin('/'),\n  dashboard: toRouteAdmin('/dashboard'),\n  profile: toRouteAdmin('/profile'),\n  user: toRouteAdmin('/user')\n};\n\nexport const SuperAdmin = {\n  base: adminBase,\n  instance: toRouteAdmin('/instance'),\n  permission: toRouteAdmin('/permission'),\n  entity: toRouteAdmin('/entity')\n};\n\nexport const Public = {\n  base: publicBase,\n  login: toRoutePublic('login'),\n  logout: toRoutePublic('logout'),\n  forgotYourPassword: toRoutePublic('forgotten-password'),\n  signUp: toRoutePublic('sign-up')\n};\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nexport default () => {\n  return (\n    <div className=\"col s12\">\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <Typography variant=\"h4\">Page not found</Typography>\n          <p>\n            Maybe the page you are looking for has been removed, or you typed in\n            the wrong URL\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { UI } from '@nexys/material-components';\n\nconst { Layout } = UI;\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <Layout.Simple title=\"Dashboard\">\n      <Typography>You're ready to go</Typography>\n    </Layout.Simple>\n  );\n};\n\nexport default Dashboard;\n","export const appTitle = process.env.REACT_APP_APP_TITLE || 'Awesome App';\n\nexport const withBackend =\n  process.env.REACT_APP_WITH_BACKEND === 'false' ? false : true;\n\nexport const gitHubRepoUrl = process.env.REACT_APP_GITHUB_REPO_URL;\n\nexport const instanceUuid = '';\n","import { OptionSet, Uuid } from '@nexys/material-components/dist/common/type';\nimport * as T from './type';\n\nexport const statuses: OptionSet[] = [\n  {\n    id: T.Status.pending,\n    name: 'Pending'\n  },\n  {\n    id: T.Status.active,\n    name: 'Active'\n  },\n  {\n    id: T.Status.inactive,\n    name: 'Inactive'\n  }\n];\n\nexport const postProcessing = (item: T.UserCrud): T.User => {\n  const status = statuses.filter(x => x.id === item.status.id)[0];\n\n  return {\n    ...item,\n    status,\n    instance: {\n      uuid: item.instance.uuid,\n      name: ''\n    }\n  };\n};\n\n/**\n * takes output from the query service and formats for assigned business object\n */\nexport const formatAssigned = (\n  input: {\n    uuid: Uuid;\n    name: string;\n    PermissionInstance?: {\n      uuid: Uuid;\n      UserPermission?: { uuid: Uuid }[];\n    }[];\n  }[]\n): T.UserPermission[] => {\n  return input.map(ip => {\n    const assigned: string | undefined =\n      ip.PermissionInstance &&\n      ip.PermissionInstance.length &&\n      ip.PermissionInstance[0].UserPermission &&\n      ip.PermissionInstance[0].UserPermission.length\n        ? ip.PermissionInstance[0].UserPermission[0].uuid\n        : undefined;\n\n    return {\n      id: ip.uuid,\n      name: ip.name,\n      assigned\n    };\n  });\n};\n","import * as T from './type';\n\nexport const data: T.UserCrud[] = [\n  {\n    uuid: 'uuid1',\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john.doe@emample.com',\n    status: { id: 2 },\n    instance: {\n      uuid: 'uuid1'\n    }\n  },\n  {\n    uuid: 'uuid2',\n    firstName: 'Jane',\n    lastName: 'Doe',\n    email: 'jane.doe@emample.com',\n    status: { id: 1 },\n    instance: {\n      uuid: 'uuid1'\n    }\n  }\n];\n\nexport const permissions: {\n  id: number;\n  name: string;\n  UserPermission?: { uuid: string }[];\n}[] = [\n  {\n    id: 1,\n    name: 'app',\n    UserPermission: [{ uuid: 'uuid1' }]\n  },\n  {\n    id: 2,\n    name: 'admin',\n    UserPermission: [{ uuid: 'uuid2' }]\n  },\n  {\n    id: 3,\n    name: 'superadmin',\n    UserPermission: [{ uuid: 'uuid3' }]\n  }\n];\n","import { Id, Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\nimport { instanceUuid, withBackend } from 'config';\n\nimport * as T from './type';\nimport * as U from './utils';\nimport * as MockData from './mock-data';\n\nconst C = new Stateful.RequestUtil.Crud.withUuid<T.UserCrud>('User');\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nconst projection = {\n  status: {}\n};\n\nexport const list = async (): Promise<T.User[]> => {\n  if (!withBackend) {\n    console.log('USER list');\n    return Promise.resolve(MockData.data.map(x => U.postProcessing(x)));\n  }\n\n  const re = await RequestWrapper(C.list({ projection }));\n\n  return re.map(x => U.postProcessing(x));\n};\n\nexport const insert = async (\n  data: Partial<T.User>\n): Promise<{ id: Id | Uuid }> => {\n  if (!withBackend) {\n    console.log('USER insert', data);\n    return Promise.resolve({ id: 'uuid1' });\n  }\n\n  const dataForBackend: Omit<T.UserCrud, 'uuid'> = {\n    firstName: data.firstName!,\n    lastName: data.lastName!,\n    email: data.email!,\n    status: { id: data.status!.id },\n    instance: {\n      uuid: instanceUuid\n    }\n  };\n\n  const re = await RequestWrapper(C.insertByUuid(dataForBackend));\n  return { id: re.uuid };\n};\n\nexport const detail = async (id: Id | Uuid): Promise<T.User> => {\n  if (!withBackend) {\n    console.log('USER detail', id);\n    const item = MockData.data.find(x => x.uuid === id);\n    return Promise.resolve(U.postProcessing(item || MockData.data[0]));\n  }\n\n  const re = await RequestWrapper(C.detail({ uuid: String(id) }));\n  return U.postProcessing(re);\n};\n\nexport const update = (data: Partial<T.User>): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('USER update', data);\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: Omit<T.UserCrud, 'status' | 'instance'> = {\n    uuid: data.uuid!,\n    firstName: data.firstName!,\n    lastName: data.lastName!,\n    email: data.email!\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n\nexport const deleteById = (id: Id | Uuid): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('USER delete', id);\n    return Promise.resolve(true);\n  }\n\n  return RequestWrapper(C.deleteByUuid(String(id)));\n};\n\nexport const statusList = () => {\n  return Promise.resolve(U.statuses);\n};\n\nexport const statusUpdate = async (\n  uuid: Uuid,\n  optionId: Id\n): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('statusUpdate', uuid, optionId);\n\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: Pick<T.UserCrud, 'uuid' | 'status'> = {\n    uuid,\n    status: { id: optionId }\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n","import { Profile } from './type';\n\nexport const profile: Profile = {\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com',\n  uuid: 'myuid'\n};\n","import { Stateful } from '@nexys/material-components';\nimport { withBackend } from 'config';\n\nimport * as UserService from 'interface/user/data';\nimport { Profile } from './type';\nimport * as Mock from './mock-data';\n\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nexport const detail = async (): Promise<Profile> => {\n  if (!withBackend) {\n    return new Promise(r => r(Mock.profile));\n  }\n\n  return RequestWrapper(Stateful.Request.get('/profile'));\n};\n\nexport const update = async (data: Profile): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('profile update', data);\n    return Promise.resolve(true);\n  }\n\n  return UserService.update(data);\n};\n\nexport const passwordUpdate = (\n  oldPassword: string,\n  newPassword: string\n): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('password update', oldPassword, newPassword);\n    return Promise.resolve(true);\n  }\n\n  return RequestWrapper(\n    Stateful.Request.post('/profile/password/change', {\n      old: oldPassword,\n      password: newPassword\n    })\n  );\n};\n","import React from 'react';\n\nimport { Data as D, SimpleUI } from '@nexys/material-components';\n\nimport * as Data from 'interface/profile/data';\nimport * as T from 'interface/profile/type';\n\ninterface Props {\n  data: T.Profile;\n}\n\nconst ProfilePage = ({ data }: Props) => {\n  return (\n    <SimpleUI.ProfilePage<T.Profile>\n      data={data}\n      updateProfilePromise={Data.update}\n      updatePasswordPromise={Data.passwordUpdate}\n    />\n  );\n};\n\nconst ProfilePageLoader = () => {\n  return (\n    <D.Load.WithLoader<T.Profile>\n      dataLoad={Data.detail()}\n      Component={ProfilePage}\n    />\n  );\n};\n\nexport default ProfilePageLoader;\n","import React from 'react';\n\nimport { UI } from '@nexys/material-components';\nimport { appTitle, gitHubRepoUrl } from 'config';\n\nconst shaToUrl = (sha: string) => `${gitHubRepoUrl}/commit/${sha}`;\n\nconst sha: string = process.env.REACT_APP_GIT_SHA || 'sha_placeholder';\n\nconst Footer = () => (\n  <UI.Nav.Footer.Footer>\n    <UI.Nav.Footer.Copyright\n      sha={{ sha, link: shaToUrl(sha) }}\n      company={appTitle}\n    />\n  </UI.Nav.Footer.Footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport UserIcon from '@material-ui/icons/Person';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { appTitle } from 'config';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper\n    // boxShadow: 'none'\n  }\n}));\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const menus = [\n    { link: Links.App.profile, Icon: UserIcon },\n    { link: Links.Public.logout, Icon: LogoutIcon }\n  ];\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      className={classes.appBar}\n      isOpen\n      textColor={theme.palette.primary.main}\n    />\n  );\n};\n","import React from 'react';\n\n// Icon import\nimport Dashboardicon from '@material-ui/icons/Dashboard';\n// end icon\n\nimport { UI, Stateful, Utils } from '@nexys/material-components';\nimport * as Link from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  drawer: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: theme.spacing(8)\n  },\n  menuItem: {\n    color: `${theme.palette.primary.contrastText} !important`\n  },\n  label: {\n    color: 'white'\n  }\n}));\n\ninterface TMenu {\n  link: string;\n  label: React.ReactNode;\n  Icon: any;\n  permission: string;\n}\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu, Divider }\n  }\n} = UI;\n\nconst Label = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  const classes = useStyles();\n\n  return <span className={classes.label}>{children}</span>;\n};\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.App.dashboard,\n    label: <Label>Dashboard</Label>,\n    Icon: Dashboardicon,\n    permission: 'app'\n  }\n];\n\nexport default () => {\n  const classes = useStyles();\n\n  // list of permissions from profile\n  const permissions =\n    Stateful.Credentials.getPermissions().sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    }) || [];\n\n  return (\n    <Drawer\n      isOpen={true}\n      onClose={() => {}}\n      classNames={{ paper: classes.drawer }}\n      hideToggleButton={true}\n    >\n      <Divider />\n      <Menu\n        list={listMain.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport { Utils } from '@nexys/material-components';\n\nimport Footer from '../../admin/layout/footer';\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1\n  },\n  main: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  container: {\n    minHeight: 'calc(100vh - 64px - 72px)', // we need to subtract the height of the topnav and the height of the footer\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nfunction Layout(props: Props) {\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <TopNav />\n      <LeftNav />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n\n          <Footer />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport NotFound from '../public/not-found-404';\nimport Dashboard from './dashboard';\nimport Profile from '../admin/profile';\n\nimport Layout from './layout';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nfunction App(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Links.App.dashboard} component={Dashboard} />\n        <Route path={Links.App.profile} component={Profile} />\n\n        <Route path={`${Links.App.base}/`}>\n          <Redirect to={Links.App.dashboard} />\n        </Route>\n        <Route path={Links.App.base} component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(App, 'app'));\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { UI } from '@nexys/material-components';\n\nconst { Layout } = UI;\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <Layout.Simple title=\"Dashboard\">\n      <Typography>You're ready to go</Typography>\n    </Layout.Simple>\n  );\n};\n\nexport default Dashboard;\n","import { Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\n\nimport { instanceUuid, withBackend } from 'config';\nimport * as CT from 'interface/crud/config';\nimport * as T from './type';\nimport * as U from './utils';\n\nconst C = new Stateful.RequestUtil.Crud.CrudRequest<T.UserPermissionCrud>(\n  'UserPermission'\n);\nconst CPermissionInstance = new Stateful.RequestUtil.Crud.CrudRequest<CT.PermissionInstance>(\n  'PermissionInstance'\n);\n\nexport const list = async (\n  uuid: Uuid,\n  pInstanceUuid?: Uuid\n): Promise<T.UserPermission[]> => {\n  if (!withBackend) {\n    return Promise.resolve([\n      { id: 'uuid1', name: 'app', assigned: 'uuid1' },\n      { id: 'uuid2', name: 'admin', assigned: 'uuid2' },\n      { id: 'uuid3', name: 'superadmin', assigned: 'uuid2' }\n    ]);\n  }\n\n  const query = {\n    Permission: {\n      projection: {},\n      references: {\n        PermissionInstance: {\n          projection: { uuid: true, instance: { uuid: true } },\n          filters: { instance: { uuid: pInstanceUuid || instanceUuid } },\n          references: {\n            UserPermission: {\n              projection: { uuid: true },\n              filters: { user: { uuid } }\n            }\n          }\n        }\n      },\n      order: { by: 'name' }\n    }\n  };\n\n  const d = await Stateful.Request.post('/crud/query', query);\n\n  return U.formatAssigned(\n    d.Permission.filter(\n      (x: any) =>\n        (x.PermissionInstance &&\n          x.PermissionInstance[0].instance.uuid === pInstanceUuid) ||\n        instanceUuid\n    )\n  );\n};\n\nexport const insert = async (\n  userUuid: Uuid,\n  permissionUuid: Uuid,\n  pInstanceUuid?: Uuid\n): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const permissionInstance = await CPermissionInstance.detail({\n    permission: { uuid: permissionUuid },\n    instance: { uuid: pInstanceUuid || instanceUuid }\n  });\n\n  const data = {\n    permissionInstance: { uuid: permissionInstance.uuid },\n    user: { uuid: userUuid }\n  };\n\n  return C.insert(data).then(_x => true);\n};\n\nexport const deletePermission = async (\n  userUuid: Uuid,\n  permissionUuid: Uuid\n): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const permissionInstance = await CPermissionInstance.detail({\n    permission: { uuid: permissionUuid },\n    instance: { uuid: instanceUuid }\n  });\n\n  return C.delete({\n    user: { uuid: userUuid },\n    permissionInstance: { uuid: permissionInstance.uuid }\n  }).then(_x => false);\n};\n\nexport const toggle = async (\n  userUuid: Uuid,\n  id: Uuid,\n  assigned: boolean,\n  instanceUuid?: Uuid\n) => {\n  if (!withBackend) {\n    return Promise.resolve(assigned);\n  }\n\n  console.log(userUuid, id, assigned);\n\n  if (!!assigned) {\n    return deletePermission(String(userUuid), id);\n  }\n\n  return insert(String(userUuid), id, instanceUuid);\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Id, Uuid } from '@nexys/utils/dist/types';\nimport * as T from '@nexys/material-components/dist/crud-simple/type';\nimport { BusinessModule, UI } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport * as Data from 'interface/user/data';\nimport * as UT from 'interface/user/type';\nimport * as DataPermission from 'interface/user/permission';\n\nconst { Layout } = UI;\n\nconst permissionInterface = {\n  list: (uuid: Uuid) => DataPermission.list(uuid as Uuid) as any,\n  toggle: (uuid: Uuid, id: Uuid, assigned: boolean) =>\n    DataPermission.toggle(uuid, id, assigned)\n};\n\nconst dataInterface: T.DataInterface<UT.User> = {\n  list: Data.list,\n  detail: Data.detail,\n  insert: Data.insert,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nconst extra = (): T.ExtraUnit<UT.User>[] => [\n  {\n    title: 'Status',\n    Component: (_uuid: Uuid | Id, data: UT.User) => (\n      <BusinessModule.User.Status\n        user={data}\n        pList={Data.statusList()}\n        update={Data.statusUpdate}\n      />\n    )\n  },\n  {\n    title: 'Permissions',\n    tab: 'access-control',\n    width: { xs: 12, sm: 6, md: 6, lg: 6 },\n    Component: (uuid: Uuid | Id) => (\n      <BusinessModule.User.Permissions<Uuid, Uuid>\n        permissionInterface={permissionInterface}\n        uuid={String(uuid)}\n      />\n    )\n  }\n];\n\nexport default () => (\n  <>\n    <Route exact path={Links.Admin.user}>\n      <Layout.Title title=\"Users\" type=\"pageTitle\" />\n    </Route>\n\n    <BusinessModule.User.Crud\n      dataInterface={dataInterface}\n      urlPrefix={Links.Admin.user}\n      extra={extra()}\n    />\n  </>\n);\n","import * as CT from 'interface/crud/config';\nimport * as T from './type';\n\nexport const data: CT.Permission[] = [\n  {\n    uuid: 'uuid1',\n    name: 'app'\n  },\n  {\n    uuid: 'uuid2',\n    name: 'admin'\n  }\n];\n\nexport const permissionInstances: T.PermissionInstanceCrud[] = [\n  {\n    uuid: 'uuid1',\n    permission: { uuid: 'uuid1' },\n    instance: { uuid: 'uuid1' }\n  },\n  {\n    uuid: 'uuid2',\n    permission: { uuid: 'uuid2' },\n    instance: { uuid: 'uuid1' }\n  }\n];\n\nexport const userPermissions: T.UserPermissionCrud[] = [\n  {\n    uuid: 'uuid1',\n    name: 'App',\n    PermissionInstance: [\n      {\n        uuid: 'uuid1'\n      } as CT.PermissionInstance\n    ]\n  }\n];\n","import { Id, Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\n\nimport { withBackend } from 'config';\nimport * as CT from 'interface/crud/config';\nimport * as MockData from './mock-data';\n\nconst C = new Stateful.RequestUtil.Crud.CrudRequest<CT.Permission>(\n  'Permission'\n);\n\nexport const list = async (): Promise<CT.Permission[]> => {\n  if (!withBackend) {\n    return Promise.resolve(MockData.data);\n  }\n\n  return C.list({\n    projection: {},\n    order: { by: 'name' }\n  });\n};\n\nexport const detail = async (id: Id | Uuid): Promise<CT.Permission> => {\n  if (!withBackend) {\n    const item = MockData.data.find(x => x.uuid === id);\n    return Promise.resolve(item || MockData.data[0]);\n  }\n\n  return C.detail({ uuid: String(id) });\n};\n\nexport const insert = async (data: CT.Permission): Promise<{ id: Id }> => {\n  if (!withBackend) {\n    return Promise.resolve({ id: 1 });\n  }\n\n  const id = (await C.insert(data)) as Id;\n  return { id };\n};\n\nexport const update = (data: Partial<CT.Permission>): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  if (!data.uuid) {\n    throw Error('no uuid');\n  }\n\n  return C.update(data, { uuid: data.uuid });\n};\n\nexport const deleteById = async (id: Id | Uuid): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const r = await C.delete({ uuid: String(id) });\n  return r > 0;\n};\n","import React from 'react';\n\nimport * as T from '@nexys/material-components/dist/crud-simple/type';\nimport { Type } from '@nexys/material-components/dist/business-module/permission';\nimport { BusinessModule } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport * as Data from 'interface/permission/data';\n\nconst dataInterface: T.DataInterface<Type.Permission> = {\n  list: Data.list as any,\n  detail: Data.detail as any,\n  insert: Data.insert as any,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nexport default () => {\n  const urlPrefix = Links.SuperAdmin.permission;\n\n  return (\n    <BusinessModule.Permission.Crud\n      dataInterface={dataInterface}\n      urlPrefix={urlPrefix}\n    />\n  );\n};\n","import * as CT from 'interface/crud/config';\n\nexport const data: CT.Instance[] = [\n  {\n    uuid: 'uuid1',\n    name: 'Instance #1',\n    dateAdded: new Date('2021-01-10T13:45:00Z')\n  },\n  {\n    uuid: 'uuid2',\n    name: 'Instance #2',\n    dateAdded: new Date('2021-02-01T10:45:00Z')\n  }\n];\n","import { Id, Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\nimport { withBackend } from 'config';\n\nimport * as CT from 'interface/crud/config';\nimport * as MockData from './mock-data';\n\nconst C = new Stateful.RequestUtil.Crud.withUuid<CT.Instance>('Instance');\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nexport const list = (): Promise<CT.Instance[]> => {\n  if (!withBackend) {\n    return Promise.resolve(MockData.data);\n  }\n\n  return RequestWrapper(C.list({ projection: {} }));\n};\n\nexport const insert = async (\n  data: Partial<CT.Instance>\n): Promise<{ id: Id | Uuid }> => {\n  if (!withBackend) {\n    return Promise.resolve({ id: 'uuid1' });\n  }\n\n  const dataForBackend: Omit<CT.Instance, 'uuid'> = {\n    name: data.name!,\n    dateAdded: new Date()\n  };\n\n  const re = await RequestWrapper(C.insertByUuid(dataForBackend));\n  return { id: re.uuid };\n};\n\nexport const detail = (id: Id | Uuid): Promise<CT.Instance> => {\n  if (!withBackend) {\n    const item = MockData.data.find(x => x.uuid === id);\n    return Promise.resolve(item || MockData.data[0]);\n  }\n\n  return RequestWrapper(C.detail({ uuid: String(id) }));\n};\n\nexport const update = (data: Partial<CT.Instance>): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: CT.Instance = {\n    uuid: data.uuid!,\n    name: data.name!,\n    dateAdded: data.dateAdded!\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n\nexport const deleteById = (id: Id | Uuid): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return RequestWrapper(C.deleteByUuid(String(id)));\n};\n","import * as BT from '@nexys/material-components/dist/business-module/user/type';\nimport { Uuid } from '@nexys/material-components/dist/common/type';\nimport * as T from './type';\n\nexport const postProcessing = (\n  item: T.UserPermissionCrud\n): BT.UserPermission<Uuid> => {\n  return {\n    id: item.uuid,\n    name: item.name,\n    assigned: item.PermissionInstance && item.PermissionInstance[0].uuid\n  };\n};\n","import * as BT from '@nexys/material-components/dist/business-module/user/type';\nimport { Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\n\nimport { withBackend } from 'config';\nimport * as CT from 'interface/crud/config';\nimport * as T from './type';\nimport * as U from './utils';\nimport * as MockData from './mock-data';\n\nconst CPermissionInstance = new Stateful.RequestUtil.Crud.CrudRequest<T.PermissionInstanceCrud>(\n  'PermissionInstance'\n  // '/crud/query/admin',\n  // '/crud/mutate/admin'\n);\nconst CPermission = new Stateful.RequestUtil.Crud.CrudRequest<CT.Permission>(\n  'Permission'\n  // '/crud/query/admin',\n  // '/crud/mutate/admin'\n);\n\nexport const listAssign = async (\n  instanceUuid: Uuid\n): Promise<BT.UserPermission<Uuid>[]> => {\n  if (!withBackend) {\n    return Promise.resolve(\n      MockData.userPermissions.map(a => U.postProcessing(a))\n    );\n  }\n\n  const params = {\n    projection: {},\n    references: {\n      PermissionInstance: {\n        filters: {\n          instance: {\n            uuid: instanceUuid\n          }\n        }\n      }\n    }\n  };\n\n  const d = await CPermission.list<T.UserPermissionCrud>(params);\n\n  return d\n    .map(a => U.postProcessing(a))\n    .sort((a, b) => (a.name > b.name ? 1 : -1));\n};\n\nconst insert = async (\n  instanceUuid: Uuid,\n  permissionId: Uuid\n): Promise<boolean> => {\n  const data = {\n    permission: { uuid: permissionId },\n    instance: { uuid: instanceUuid }\n  };\n\n  return CPermissionInstance.insert(data).then(_x => true);\n};\n\nconst deletePermission = async (\n  instanceUuid: Uuid,\n  permissionId: Uuid\n): Promise<boolean> => {\n  const filters = {\n    permission: { uuid: permissionId },\n    instance: { uuid: instanceUuid }\n  };\n\n  return CPermissionInstance.delete(filters).then(_x => false);\n};\n\nexport const toggle = async (\n  instanceUuid: Uuid,\n  permissionId: Uuid,\n  assigned: boolean\n) => {\n  if (!!assigned) {\n    return deletePermission(instanceUuid, permissionId);\n  }\n\n  return insert(instanceUuid, permissionId);\n};\n","import * as UserManagement from '@nexys/material-components/dist/business-module/user';\nimport * as TC from '@nexys/material-components/dist/crud-simple/type';\nimport { Id, Uuid } from '@nexys/material-components/dist/common/type';\n\nimport * as Data from 'interface/user/data';\nimport * as DataPermission from 'interface/user/permission';\nimport * as DataFile from 'interface/file/data';\n\nexport const dataInterface: TC.DataInterface<UserManagement.Type.User> = {\n  list: Data.list,\n  detail: Data.detail,\n  insert: Data.insert,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nexport const permissionsInterface = (instanceUuid: Uuid) => ({\n  list: (userUuid: Uuid) => DataPermission.list(userUuid, instanceUuid),\n  toggle: (userUuid: Uuid, permissionUuid: Uuid, assigned: boolean) =>\n    DataPermission.toggle(userUuid, permissionUuid, assigned, instanceUuid)\n});\n\nexport const statusList = Data.statusList();\n\nexport const updateStatus = Data.statusUpdate;\n\nexport const fileList = (uuid: Uuid | Id) => DataFile.listByUser(String(uuid));\n\nexport const userAuthenticationDataInterface: TC.DataInterface<UserManagement.Type.AuthenticationMethod> = {\n  list: () => Promise.resolve([]),\n  detail: (id: Id | Uuid) => {\n    // const item = F.authenticationMethods.find(i => i.id === Number(id));\n    // return Promise.resolve(item || F.authenticationMethods[0]);\n    return Promise.resolve({} as any);\n  },\n  insert: (\n    data: Omit<UserManagement.Type.AuthenticationMethod, 'id' | 'uuid'>\n  ) => Promise.resolve({ id: 1 }),\n  update: d => Promise.resolve(true),\n  deleteById: d => Promise.resolve(true)\n};\n","import React from 'react';\n\nimport * as TC from '@nexys/material-components/dist/crud-simple/type';\nimport { Uuid, Id } from '@nexys/material-components/dist/common/type';\nimport { BusinessModule } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport {\n  dataInterface,\n  permissionsInterface,\n  statusList,\n  updateStatus,\n  // fileList,\n  userAuthenticationDataInterface\n} from './data';\n\ntype U = BusinessModule.User.Type.User;\n\nconst extra = (instanceUuid: Uuid): TC.ExtraUnit<U>[] => [\n  {\n    title: 'Status',\n    Component: (_uuid: Uuid | Id, data: U) => (\n      <BusinessModule.User.Status\n        user={data}\n        pList={statusList}\n        update={updateStatus}\n      />\n    )\n  },\n  {\n    title: 'Authentication Methods',\n    Component: (uuid: Uuid | Id) => (\n      <BusinessModule.User.Authentications\n        dataInterface={userAuthenticationDataInterface}\n        urlPrefix={`/ux/user/${uuid}/detail`}\n      />\n    )\n  },\n  {\n    title: 'Access Control',\n    tab: 'Access-Control',\n    width: { xs: 12, sm: 12, md: 12, lg: 12 },\n    Component: uuid => (\n      <BusinessModule.User.Permissions<Uuid, Uuid>\n        uuid={String(uuid)}\n        permissionInterface={permissionsInterface(instanceUuid)}\n      />\n    )\n  }\n  // {\n  //   tab: 'Files',\n  //   title: 'Files',\n  //   Component: uuid => (\n  //     <BusinessModule.User.Files uuid={String(uuid)} dataLoad={fileList} />\n  //   )\n  // }\n];\n\ninterface Props {\n  uuid: Uuid;\n}\n\nexport default ({ uuid }: Props) => (\n  <BusinessModule.User.Crud\n    urlPrefix={`${Links.SuperAdmin.instance}/${uuid}/Users`}\n    dataInterface={dataInterface}\n    extra={extra(uuid)}\n  />\n);\n\n// export default () => <p>Users</p>;\n","import React from 'react';\n\nimport * as TC from '@nexys/material-components/dist/crud-simple/type';\nimport {\n  Crud,\n  Permissions,\n  Type\n} from '@nexys/material-components/dist/business-module/instance';\nimport { Id, Uuid } from '@nexys/material-components/dist/common/type';\n\nimport * as Links from 'common/link';\nimport * as Data from 'interface/instance/data';\nimport * as DataPermissionInstance from 'interface/permission/instance';\nimport User from './user';\n\nconst dataInterface: TC.DataInterface<Type.Instance> = {\n  list: Data.list,\n  detail: Data.detail,\n  insert: Data.insert,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nexport const permissionsInterface = (uuid: Uuid) => ({\n  list: () => DataPermissionInstance.listAssign(uuid),\n  toggle: DataPermissionInstance.toggle\n});\n\nconst extra: TC.ExtraUnit<Type.Instance>[] = [\n  {\n    tab: 'Users',\n    width: { xs: 12, sm: 12, md: 12, lg: 12 },\n    Component: (uuid: string | number) => <User uuid={String(uuid)} />,\n    paper: false\n  },\n  {\n    tab: 'Permissions',\n    title: 'Permissions associated with Instance',\n    width: { xs: 12, sm: 12, md: 12, lg: 12 },\n    Component: (uuid: Uuid | Id) => (\n      <Permissions<Uuid, Uuid>\n        uuid={String(uuid)}\n        permissionInterface={permissionsInterface(String(uuid))}\n      />\n    )\n  }\n];\n\nexport default () => (\n  <Crud\n    urlPrefix={Links.SuperAdmin.instance}\n    dataInterface={dataInterface}\n    extra={extra}\n  />\n);\n","// This code was generated automatically via the Nexys platform on Fri Mar 19 2021 16:33:53 GMT+0100 (Central European Standard Time), do not alter, regenerate if needed\n\nexport interface User {\n  uuid: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  status: { id: number } | UserStatus;\n  logDateAdded: Date;\n  instance: { uuid: string } | Instance;\n}\n\nexport interface UserStatus {\n  id: number;\n  name: string;\n}\n\nexport interface Instance {\n  uuid: string;\n  name: string;\n  dateAdded: Date;\n}\n\nexport interface Permission {\n  uuid: string;\n  name: string;\n}\n\nexport interface UserPermission {\n  uuid: string;\n  permissionInstance: { uuid: string } | PermissionInstance;\n  user: { uuid: string } | User;\n}\n\nexport interface PermissionInstance {\n  uuid: string;\n  instance: { uuid: string } | Instance;\n  permission: { uuid: string } | Permission;\n}\n\nexport const entities = [];\n","import * as ET from '@nexys/material-components/dist/entity-generator/type';\n\nexport const data: ET.EntityMockData = {\n  Instance: {\n    list: [\n      {\n        uuid: 'uuid1',\n        name: 'Mock Instance #1',\n        dateAdded: '2021-01-02T14:15:00Z'\n      },\n      {\n        uuid: 'uuid2',\n        name: 'Mock Instance #2',\n        dateAdded: '2021-01-05T16:22:00Z'\n      }\n    ]\n  },\n  User: {\n    list: [\n      {\n        uuid: 'user-uuid-1',\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'john.doe@example.com',\n        status: { id: 1 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      },\n      {\n        uuid: 'user-uuid-2',\n        firstName: 'Jane',\n        lastName: 'Doe',\n        email: 'jane.doe@example.com',\n        status: { id: 2 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      }\n    ]\n  },\n  Permission: {\n    list: [\n      {\n        uuid: 'permission-uuid-1',\n        name: 'app'\n      },\n      {\n        uuid: 'permission-uuid-2',\n        name: 'admin'\n      },\n      {\n        uuid: 'permission-uuid-3',\n        name: 'superadmin'\n      }\n    ]\n  },\n  PermissionInstance: {\n    list: [\n      {\n        uuid: 'permission-instance-uuid-1',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-1'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-2',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-2'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-3',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-3'\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\n\nimport EntityGenerator from '@nexys/material-components/dist/entity-generator';\n\nimport { withBackend } from 'config';\nimport * as Links from 'common/link';\nimport { entities } from 'interface/crud/config';\nimport * as MockData from 'interface/crud/mock-data';\n\nconst MyEntityGenerator = (): JSX.Element => {\n  return (\n    <EntityGenerator\n      entities={entities}\n      urlPrefix={Links.SuperAdmin.entity}\n      withBackend={withBackend}\n      mockData={MockData.data}\n    />\n  );\n};\n\nexport default MyEntityGenerator;\n","import React from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport UserIcon from '@material-ui/icons/Person';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { appTitle } from 'config';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper\n    // boxShadow: 'none'\n  }\n}));\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const menus = [\n    { link: Links.Admin.profile, Icon: UserIcon },\n    { link: Links.Public.logout, Icon: LogoutIcon }\n  ];\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      className={classes.appBar}\n      isOpen\n      textColor={theme.palette.primary.main}\n    />\n  );\n};\n","import React from 'react';\n\n// Icon import\nimport {\n  Dashboard as DashboardIcon,\n  Group as InvestorIcon,\n  VpnKey as PermissionIcon,\n  Storage as InstanceIcon,\n  AccountTree as EntityIcon\n} from '@material-ui/icons';\n// end icon\n\nimport { UI, Stateful, Utils } from '@nexys/material-components';\nimport * as Link from 'common/link';\n\nconst UserIcon = InvestorIcon;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  drawer: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: theme.spacing(8)\n  },\n  menuItem: {\n    color: `${theme.palette.primary.contrastText} !important`\n  },\n  label: {\n    color: 'white'\n  }\n}));\n\ninterface TMenu {\n  link: string;\n  label: React.ReactNode;\n  Icon: any;\n  permission: string;\n}\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu, Divider }\n  }\n} = UI;\n\nconst permission = 'admin';\nconst superAdminPermission = 'superadmin';\n\nconst Label = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  const classes = useStyles();\n\n  return <span className={classes.label}>{children}</span>;\n};\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.Admin.dashboard,\n    label: <Label>Dashboard</Label>,\n    Icon: DashboardIcon,\n    permission\n  },\n  {\n    link: Link.Admin.user,\n    label: <Label>Users</Label>,\n    Icon: UserIcon,\n    permission\n  }\n];\n\nconst listSuperAdmin: TMenu[] = [\n  {\n    link: Link.SuperAdmin.permission,\n    label: <Label>Permissions</Label>,\n    Icon: PermissionIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.instance,\n    label: <Label>Instance</Label>,\n    Icon: InstanceIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.entity,\n    label: <Label>Entities</Label>,\n    Icon: EntityIcon,\n    permission: superAdminPermission\n  }\n];\n\nexport default () => {\n  const classes = useStyles();\n\n  // list of permissions from profile\n  const permissions =\n    Stateful.Credentials.getPermissions().sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    }) || [];\n\n  return (\n    <Drawer\n      isOpen={true}\n      onClose={() => {}}\n      classNames={{ paper: classes.drawer }}\n      hideToggleButton={true}\n    >\n      <Divider />\n      <Menu\n        list={listMain.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n\n      <Divider />\n      <Menu\n        list={listSuperAdmin.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Utils } from '@nexys/material-components';\n\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\nimport Footer from './footer';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1\n  },\n  main: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  container: {\n    minHeight: 'calc(100vh - 64px - 72px)', // we need to subtract the height of the topnav and the height of the footer\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nfunction Layout(props: Props) {\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <TopNav />\n      <LeftNav />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n\n          <Footer />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport Dashboard from './dashboard';\nimport User from './user';\nimport Permission from './permission';\nimport Instance from './instance';\nimport Profile from './profile';\nimport NotFound from '../public/not-found-404';\nimport EntityGenerator from './entity-generator';\n\nimport Layout from './layout';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nfunction Admin(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route\n          path={Links.Admin.dashboard}\n          component={Dashboard}\n          props={props}\n        />\n        <Route path={Links.Admin.user} component={User} props={props} />\n        <Route\n          path={Links.SuperAdmin.permission}\n          component={Permission}\n          props={props}\n        />\n        <Route\n          path={Links.SuperAdmin.instance}\n          component={Instance}\n          props={props}\n        />\n\n        <Route path={Links.Admin.profile} component={Profile} />\n        <Route path={Links.SuperAdmin.entity} component={EntityGenerator} />\n\n        <Route path={`${Links.Admin.base}/`}>\n          <Redirect to={Links.Admin.dashboard} />\n        </Route>\n        <Route path={Links.Admin.base} component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(Admin, 'admin'));\n","export const profile = {\n  id: '42010aac0033',\n  uuid: '42010aac0033',\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com',\n  lang: 'en',\n  instance: { uuid: '11eb-9846', name: 'Mock Instance' }\n};\n\nexport const locale = { id: 1, name: 'en' };\n\nexport const permissions = ['app', 'admin', 'superadmin'];\n","import { Stateful } from '@nexys/material-components';\n\nimport { withBackend } from 'config';\nimport * as MockData from './mock-data';\nimport * as T from './type';\n\nexport const login = async (data: Partial<T.User>): Promise<boolean> => {\n  if (!withBackend) {\n    Stateful.Credentials.set(\n      MockData.profile,\n      MockData.permissions,\n      MockData.locale.name\n    );\n\n    return Promise.resolve(true);\n  }\n\n  const re = await Stateful.Request.post('/login', data);\n  Stateful.Credentials.set(re.profile, re.permissions, re.locale.name);\n\n  return true;\n};\n\nexport const logout = (): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return Stateful.Request.get('/login/logout');\n};\n\nexport const signUp = (data: T.User): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return Stateful.Request.post('/login/signup', data);\n};\n","import styled from 'styled-components';\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  background-color: white;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\n  border-radius: 7px;\n  margin-bottom: 30px;\n  padding: 24px;\n`;\n\nconst ErrorMessage = styled.p`\n  background-color: rgba(256, 256, 256);\n  text-align: 'center';\n`;\n\nexport { ErrorContainer, ErrorMessage };\n","import React from 'react';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport { ErrorContainer, ErrorMessage } from './error.styles';\n\nconst { Store } = Stateful;\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n  name: string;\n}\n\nconst Error = (props: Props) => {\n  const { name, children } = props;\n\n  if (Store.get(name) !== true) {\n    return null;\n  }\n\n  Store.remove(name);\n  console.log(name);\n\n  return (\n    <ErrorContainer>\n      <ErrorMessage role=\"alert\">{children}</ErrorMessage>\n    </ErrorContainer>\n  );\n};\n\nexport default Error;\n","import Error from './error';\n\nexport default Error;\n","import React from 'react';\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(-3)\n  },\n  contentContainer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4),\n    width: '60%'\n  },\n  title: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  },\n  titleContainer: {\n    textAlign: 'center'\n  },\n  icon: {\n    color: theme.palette.success.main\n  },\n  divider: {\n    margin: theme.spacing(4, 'auto'),\n    maxWidth: '90%'\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  }\n}));\n\nconst { Link } = UI;\n\nconst ExtraContent = (): JSX.Element => {\n  const classes = useStyles();\n\n  const benefits: string[] = [\n    'Lorem ipsum dolor sit amet',\n    'Nulla orci urna, feugiat convallis iaculis non',\n    'Maecenas sagittis blandit ex, sed condimentum'\n  ];\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.contentContainer}>\n        <div className={classes.titleContainer}>\n          <Typography component=\"h2\" className={classes.title}>\n            Join the community\n          </Typography>\n        </div>\n\n        {benefits.map((b, i) => (\n          <List key={`benefit-${i}`}>\n            <ListItem>\n              <ListItemIcon>\n                <CheckIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText>{b}</ListItemText>\n            </ListItem>\n          </List>\n        ))}\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Typography>\n            Don't have an account yet?{' '}\n            <Link to={Links.Public.signUp} className={classes.link}>\n              Sign up now\n            </Link>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExtraContent;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport { useHistory } from 'react-router-dom';\n\nimport { Field } from '@nexys/material-components/dist/simple-ui/form-simple/type';\nimport { SimpleUI, UI, Utils } from '@nexys/material-components';\n\nimport { appTitle } from 'config';\nimport * as Links from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as Data from 'interface/login/data';\nimport { Error, ExtraContent } from './partials';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    maxWidth: '400px',\n    margin: '0 auto'\n  },\n  divider: {\n    margin: theme.spacing(4, 0)\n  },\n  linkContainer: {\n    textAlign: 'center'\n  }\n}));\n\nconst { Layout, Link } = UI;\n\nconst Login = (): JSX.Element => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const fields: Field<T.User>[] = [\n    {\n      label: 'Email Address',\n      name: 'email',\n      type: 'string'\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'string',\n      ux: 'password'\n    }\n  ];\n\n  const initialValues: T.User = {\n    email: '',\n    password: ''\n  };\n\n  const handleLogin = (data: any) => {\n    return Data.login(data).then(r => {\n      history.push(Links.App.dashboard);\n    });\n  };\n\n  return (\n    <Layout.Login\n      title={`Login to ${appTitle}`}\n      layout=\"left\"\n      otherContent={<ExtraContent />}\n    >\n      <div className={classes.container}>\n        <Error name=\"notifLogout\">You were successfully logged out.</Error>\n        <Error name=\"sessionExpired\">\n          Your session expired. Please login again to continue where you left\n          off.\n        </Error>\n\n        <SimpleUI.FormSimple<T.User>\n          data={initialValues}\n          fields={fields}\n          promise={handleLogin}\n          submitLabel=\"Login\"\n          message={{\n            success: 'Logged in successfully',\n            error: 'Error while trying to login'\n          }}\n        />\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Link to={Links.Public.forgotYourPassword}>\n            Forgot Your Password?\n          </Link>\n        </div>\n      </div>\n    </Layout.Login>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport * as Data from 'interface/login/data';\nimport * as Links from 'common/link';\n\nconst { Credentials, Store } = Stateful;\n\nexport default () => {\n  useEffect(() => {\n    Data.logout();\n    Credentials.remove();\n\n    // so we wouldn't show both messages\n    if (!Store.get('sessionExpired')) {\n      Store.set('notifLogout', true);\n    }\n  }, []);\n\n  return <Redirect to={Links.Public.base} />;\n};\n","import React from 'react';\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(-3)\n  },\n  contentContainer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4),\n    width: '60%'\n  },\n  title: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  },\n  titleContainer: {\n    textAlign: 'center'\n  },\n  icon: {\n    color: theme.palette.success.main\n  },\n  divider: {\n    margin: theme.spacing(4, 'auto'),\n    maxWidth: '90%'\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  }\n}));\n\nconst { Link } = UI;\n\nconst ExtraContent = (): JSX.Element => {\n  const classes = useStyles();\n\n  const benefits: string[] = [\n    'Lorem ipsum dolor sit amet',\n    'Nulla orci urna, feugiat convallis iaculis non',\n    'Maecenas sagittis blandit ex, sed condimentum'\n  ];\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.contentContainer}>\n        <div className={classes.titleContainer}>\n          <Typography component=\"h2\" className={classes.title}>\n            Join the Community\n          </Typography>\n        </div>\n\n        {benefits.map((b, i) => (\n          <List key={`benefit-${i}`}>\n            <ListItem>\n              <ListItemIcon>\n                <CheckIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText>{b}</ListItemText>\n            </ListItem>\n          </List>\n        ))}\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Typography>\n            Already have an account?{' '}\n            <Link to={Links.Public.login} className={classes.link}>\n              Login\n            </Link>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExtraContent;\n","import React, { useState } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Field } from '@nexys/material-components/dist/simple-ui/form-simple/type';\nimport { SimpleUI, UI, Utils } from '@nexys/material-components';\n\nimport { appTitle } from 'config';\nimport * as Links from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as Data from 'interface/login/data';\nimport { ExtraContent } from './partials';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    maxWidth: '400px',\n    margin: '0 auto'\n  },\n  message: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  },\n  intro: {\n    marginTop: theme.spacing(-2),\n    textAlign: 'center',\n\n    '& strong': {\n      color: theme.palette.secondary.main\n    }\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  divider: {\n    margin: theme.spacing(4, 0)\n  }\n}));\n\nconst { Layout, Link } = UI;\n\nconst Login = (): JSX.Element => {\n  const [state, setState] = useState<'default' | 'signUp'>('default');\n  const classes = useStyles();\n\n  const fields: Field<T.SignUpUser>[] = [\n    {\n      label: 'First Name',\n      name: 'firstName',\n      type: 'string'\n    },\n    {\n      label: 'Last Name',\n      name: 'lastName',\n      type: 'string'\n    },\n    {\n      label: 'Email Address',\n      name: 'email',\n      type: 'string'\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'string',\n      ux: 'password'\n    }\n  ];\n\n  const initialValues: T.SignUpUser = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  };\n\n  const handleSignUp = (data: any) => {\n    return Data.signUp(data).then(r => {\n      setState('signUp');\n      return true;\n    });\n  };\n\n  return (\n    <Layout.Login\n      title=\"Create Your Account\"\n      layout=\"left\"\n      otherContent={<ExtraContent />}\n    >\n      <div className={classes.container}>\n        {state === 'signUp' ? (\n          <Typography className={classes.message}>\n            You signed up successfully.{' '}\n            <Link to={Links.Public.login} className={classes.link}>\n              Login here\n            </Link>\n          </Typography>\n        ) : (\n          <>\n            <Typography className={classes.intro}>\n              to join <strong>{appTitle}</strong>\n            </Typography>\n            <SimpleUI.FormSimple<T.SignUpUser>\n              data={initialValues}\n              fields={fields}\n              promise={handleSignUp}\n              submitLabel=\"Sign Up\"\n              message={{\n                success: 'Signed up successfully',\n                error: 'Error while trying to sign up'\n              }}\n            />\n            <Divider className={classes.divider} />\n\n            <div className={classes.linkContainer}>\n              <Link to={Links.Public.login}>Back to Login</Link>\n            </div>\n          </>\n        )}\n      </div>\n    </Layout.Login>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport * as Links from '../common/link';\nimport Login from './login';\nimport Logout from './logout';\nimport SignUp from './sign-up';\n\nfunction Public(props: RouteComponentProps) {\n  return (\n    <Switch>\n      <Route path={Links.Public.login} component={Login} props={props} />\n      <Route path={Links.Public.logout} component={Logout} props={props} />\n      <Route path={Links.Public.signUp} component={SignUp} props={props} />\n      <Route path={Links.Public.base}>\n        <Redirect to={Links.Public.login} />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default withRouter(Public);\n","import React from 'react';\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Router,\n  RouteComponentProps\n} from 'react-router-dom';\nimport * as History from 'history';\n\nimport { SnackbarProvider } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport App from './app';\nimport Admin from './admin';\nimport Public from './public';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst MyRouter = (props: RouteComponentProps) => {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <Switch>\n        <Route path={Links.App.base} component={App} props={props} />\n        <Route path={Links.Admin.base} component={Admin} props={props} />\n        <Route path={Links.Public.base} component={Public} props={props} />\n      </Switch>\n    </SnackbarProvider>\n  );\n};\n\nconst R = withRouter(MyRouter);\n\nexport default () => (\n  <Router history={history}>\n    <R />\n  </Router>\n);\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#5691ff'\n    },\n    secondary: {\n      main: '#1164FD'\n    },\n    background: {\n      default: '#f5f5f5'\n    },\n    success: {\n      main: '#91ff56'\n    }\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppRouter from './router';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from '@nexys/material-components';\n\nReactDOM.render(\n  <ThemeProvider theme={theme} withCssBaseline>\n    <AppRouter />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}