{"version":3,"sources":["interface/user/type.ts","common/link/index.ts","public/not-found-404.tsx","app/dashboard/index.tsx","config/index.ts","interface/user/utils.ts","interface/user/mock-data.ts","interface/user/data.ts","interface/profile/mock-data.ts","interface/profile/data.ts","admin/profile/index.tsx","admin/layout/footer.tsx","app/layout/top-nav.tsx","app/layout/left-nav.tsx","app/layout/index.tsx","app/index.tsx","admin/dashboard/index.tsx","interface/user/permission.ts","admin/user/index.tsx","interface/permission/mock-data.ts","interface/permission/data.ts","admin/permission/index.tsx","interface/instance/utils.ts","interface/instance/mock-data.ts","interface/instance/data.ts","interface/permission/utils.ts","interface/permission/instance.ts","admin/instance/user/data.ts","admin/instance/user/index.tsx","admin/instance/index.tsx","interface/crud/def.ts","interface/crud/mock-data.ts","admin/entity-generator/index.tsx","admin/layout/top-nav.tsx","admin/layout/left-nav.tsx","admin/layout/index.tsx","admin/index.tsx","interface/login/mock-data.ts","interface/login/data.ts","public/login/partials/error/error.styles.ts","public/login/partials/error/error.tsx","public/login/partials/error/index.ts","public/login/partials/extra-content/index.tsx","public/login/index.tsx","public/logout/index.tsx","public/sign-up/partials/extra-content/index.tsx","public/sign-up/index.tsx","public/index.tsx","router.tsx","theme.js","serviceWorker.js","index.tsx"],"names":["Status","toRouteApp","s","toRouteAdmin","toRoutePublic","App","base","default","dashboard","profile","Admin","user","SuperAdmin","instance","permission","entity","Public","login","logout","forgotYourPassword","signUp","className","Typography","variant","Layout","UI","Dashboard","Simple","title","appTitle","process","REACT_APP_APP_TITLE","withBackend","REACT_APP_WITH_BACKEND","gitHubRepoUrl","REACT_APP_GITHUB_REPO_URL","statuses","id","T","pending","name","active","inactive","postProcessing","item","status","filter","x","uuid","data","firstName","lastName","email","C","Stateful","RequestUtil","Crud","withUuid","RequestWrapper","Wrapper","projection","list","a","console","log","Promise","resolve","MockData","map","U","re","insert","dataForBackend","insertByUuid","detail","find","String","update","updateByUuid","deleteById","deleteByUuid","statusList","statusUpdate","optionId","r","Mock","Request","get","UserService","passwordUpdate","oldPassword","newPassword","post","old","password","ProfilePage","updateProfilePromise","Data","updatePasswordPromise","ProfilePageLoader","Load","WithLoader","dataLoad","Component","sha","Footer","Nav","Copyright","link","company","Top","useStyles","Utils","makeStyles","theme","appBar","backgroundColor","palette","background","paper","useTheme","classes","menus","Links","Icon","UserIcon","LogoutIcon","isOpen","textColor","primary","main","drawer","paddingTop","spacing","menuItem","color","contrastText","label","Left","Drawer","Menu","Divider","Label","children","listMain","Link","Dashboardicon","permissions","Credentials","getPermissions","sort","b","onClose","classNames","hideToggleButton","includes","icon","root","display","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","container","minHeight","paddingBottom","props","Container","maxWidth","Auth","REDIRECT_URI","Conf","withRouter","useIdleTimer","Store","set","location","pathname","window","path","component","Profile","to","NotFound","CrudRequest","CPermissionInstance","assigned","query","Permission","references","PermissionInstance","filters","UserPermission","order","by","d","ip","length","undefined","userUuid","permissionUuid","permissionInstance","then","_x","deletePermission","delete","toggle","permissionInterface","DataPermission","dataInterface","exact","Title","type","User","urlPrefix","extra","_uuid","pList","tab","width","xs","sm","md","lg","Permissions","userPermissions","Error","dateAdded","Date","CPermission","listAssign","instanceUuid","params","permissionId","permissionsInterface","updateStatus","userAuthenticationDataInterface","Authentications","DataPermissionInstance","entities","table","fields","column","optional","Instance","lang","MyEntityGenerator","mockData","InvestorIcon","DashboardIcon","listSuperAdmin","PermissionIcon","InstanceIcon","EntityIcon","CssBaseline","EntityGenerator","locale","ErrorContainer","styled","div","ErrorMessage","p","remove","role","marginTop","contentContainer","padding","secondary","fontSize","typography","h5","marginBottom","paddingLeft","titleContainer","textAlign","success","divider","margin","linkContainer","ExtraContent","i","List","key","ListItem","ListItemIcon","ListItemText","Login","history","useHistory","layout","otherContent","FormSimple","ux","promise","push","submitLabel","message","error","useEffect","intro","useState","state","setState","Logout","SignUp","History","basename","R","maxSnack","createMuiTheme","Boolean","hostname","match","ReactDOM","render","withCssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52f404a1.chunk.js","sourcesContent":["import { OptionSet, Uuid } from '@nexys/material-components/dist/common/type';\nimport * as CT from 'interface/crud/type';\n\nexport type UserCrud = Omit<CT.User, 'password' | 'logDateAdded' | 'lang'>;\n\nexport type User = Omit<UserCrud, 'status' | 'instance' | 'lang'> & {\n  status: OptionSet;\n  instance: Omit<CT.Instance, 'dateAdded'>;\n};\n\nexport enum Status {\n  active = 1,\n  inactive = 2,\n  pending = 3\n}\n\nexport type UserPermissionCrud = Omit<\n  CT.UserPermission,\n  'logUser' | 'logDateAdded'\n>;\n\nexport interface UserPermission {\n  id: Uuid;\n  name: string;\n  assigned?: Uuid;\n}\n","const appBase = '/app';\nconst adminBase = '/admin';\nconst publicBase = '/';\n\nconst toRouteApp = (s: string) => appBase + s;\nconst toRouteAdmin = (s: string) => adminBase + s;\nconst toRoutePublic = (s: string) => publicBase + s;\n\nexport const App = {\n  base: appBase,\n  default: toRouteApp('/'),\n  dashboard: toRouteApp('/dashboard'),\n  profile: toRouteApp('/profile')\n};\n\nexport const Admin = {\n  base: adminBase,\n  default: toRouteAdmin('/'),\n  dashboard: toRouteAdmin('/dashboard'),\n  profile: toRouteAdmin('/profile'),\n  user: toRouteAdmin('/user')\n};\n\nexport const SuperAdmin = {\n  base: adminBase,\n  instance: toRouteAdmin('/instance'),\n  permission: toRouteAdmin('/permission'),\n  entity: toRouteAdmin('/entity')\n};\n\nexport const Public = {\n  base: publicBase,\n  login: toRoutePublic('login'),\n  logout: toRoutePublic('logout'),\n  forgotYourPassword: toRoutePublic('forgotten-password'),\n  signUp: toRoutePublic('sign-up')\n};\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nexport default () => {\n  return (\n    <div className=\"col s12\">\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <Typography variant=\"h4\">Page not found</Typography>\n          <p>\n            Maybe the page you are looking for has been removed, or you typed in\n            the wrong URL\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { UI } from '@nexys/material-components';\n\nconst { Layout } = UI;\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <Layout.Simple title=\"Dashboard\">\n      <Typography>You're ready to go</Typography>\n    </Layout.Simple>\n  );\n};\n\nexport default Dashboard;\n","export const appTitle = process.env.REACT_APP_APP_TITLE || 'Awesome App';\n\nexport const withBackend =\n  process.env.REACT_APP_WITH_BACKEND === 'false' ? false : true;\n\nexport const gitHubRepoUrl = process.env.REACT_APP_GITHUB_REPO_URL;\n\nexport const instanceUuid = '';\n","import { OptionSet, Uuid } from '@nexys/material-components/dist/common/type';\nimport * as T from './type';\n\nexport const statuses: OptionSet[] = [\n  {\n    id: T.Status.pending,\n    name: 'Pending'\n  },\n  {\n    id: T.Status.active,\n    name: 'Active'\n  },\n  {\n    id: T.Status.inactive,\n    name: 'Inactive'\n  }\n];\n\nexport const postProcessing = (item: T.UserCrud): T.User => {\n  const status = statuses.filter(x => x.id === item.status.id)[0];\n\n  return {\n    ...item,\n    status,\n    instance: {\n      uuid: item.instance.uuid,\n      name: ''\n    }\n  };\n};\n\n/**\n * takes output from the query service and formats for assigned business object\n */\nexport const formatAssigned = (\n  input: {\n    uuid: Uuid;\n    name: string;\n    PermissionInstance?: {\n      uuid: Uuid;\n      UserPermission?: { uuid: Uuid }[];\n    }[];\n  }[]\n): T.UserPermission[] => {\n  return input.map(ip => {\n    const assigned: string | undefined =\n      ip.PermissionInstance &&\n      ip.PermissionInstance.length &&\n      ip.PermissionInstance[0].UserPermission &&\n      ip.PermissionInstance[0].UserPermission.length\n        ? ip.PermissionInstance[0].UserPermission[0].uuid\n        : undefined;\n\n    return {\n      id: ip.uuid,\n      name: ip.name,\n      assigned\n    };\n  });\n};\n","import * as T from './type';\n\nexport const data: T.UserCrud[] = [\n  {\n    uuid: 'uuid1',\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john.doe@emample.com',\n    status: { id: 2 },\n    instance: {\n      uuid: 'uuid1'\n    }\n  },\n  {\n    uuid: 'uuid2',\n    firstName: 'Jane',\n    lastName: 'Doe',\n    email: 'jane.doe@emample.com',\n    status: { id: 1 },\n    instance: {\n      uuid: 'uuid1'\n    }\n  }\n];\n\nexport const permissions: {\n  id: number;\n  name: string;\n  UserPermission?: { uuid: string }[];\n}[] = [\n  {\n    id: 1,\n    name: 'app',\n    UserPermission: [{ uuid: 'uuid1' }]\n  },\n  {\n    id: 2,\n    name: 'admin',\n    UserPermission: [{ uuid: 'uuid2' }]\n  },\n  {\n    id: 3,\n    name: 'superadmin',\n    UserPermission: [{ uuid: 'uuid3' }]\n  }\n];\n","import { Id, Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\nimport { instanceUuid, withBackend } from 'config';\n\nimport * as T from './type';\nimport * as U from './utils';\nimport * as MockData from './mock-data';\n\nconst C = new Stateful.RequestUtil.Crud.withUuid<T.UserCrud>('User');\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nconst projection = {\n  status: {}\n};\n\nexport const list = async (): Promise<T.User[]> => {\n  if (!withBackend) {\n    console.log('USER list');\n    return Promise.resolve(MockData.data.map(x => U.postProcessing(x)));\n  }\n\n  const re = await RequestWrapper(C.list({ projection }));\n\n  return re.map(x => U.postProcessing(x));\n};\n\nexport const insert = async (\n  data: Partial<T.User>\n): Promise<{ id: Id | Uuid }> => {\n  if (!withBackend) {\n    console.log('USER insert', data);\n    return Promise.resolve({ id: 'uuid1' });\n  }\n\n  const dataForBackend: Omit<T.UserCrud, 'uuid'> = {\n    firstName: data.firstName!,\n    lastName: data.lastName!,\n    email: data.email!,\n    status: { id: data.status!.id },\n    instance: {\n      uuid: instanceUuid\n    }\n  };\n\n  const re = await RequestWrapper(C.insertByUuid(dataForBackend));\n  return { id: re.uuid };\n};\n\nexport const detail = async (id: Id | Uuid): Promise<T.User> => {\n  if (!withBackend) {\n    console.log('USER detail', id);\n    const item = MockData.data.find(x => x.uuid === id);\n    return Promise.resolve(U.postProcessing(item || MockData.data[0]));\n  }\n\n  const re = await RequestWrapper(C.detail({ uuid: String(id) }));\n  return U.postProcessing(re);\n};\n\nexport const update = (data: Partial<T.User>): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('USER update', data);\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: Omit<T.UserCrud, 'status' | 'instance'> = {\n    uuid: data.uuid!,\n    firstName: data.firstName!,\n    lastName: data.lastName!,\n    email: data.email!\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n\nexport const deleteById = (id: Id | Uuid): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('USER delete', id);\n    return Promise.resolve(true);\n  }\n\n  return RequestWrapper(C.deleteByUuid(String(id)));\n};\n\nexport const statusList = () => {\n  return Promise.resolve(U.statuses);\n};\n\nexport const statusUpdate = async (\n  uuid: Uuid,\n  optionId: Id\n): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('statusUpdate', uuid, optionId);\n\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: Pick<T.UserCrud, 'uuid' | 'status'> = {\n    uuid,\n    status: { id: optionId }\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n","import { Profile } from './type';\n\nexport const profile: Profile = {\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com',\n  uuid: 'myuid'\n};\n","import { Stateful } from '@nexys/material-components';\nimport { withBackend } from 'config';\n\nimport * as UserService from 'interface/user/data';\nimport { Profile } from './type';\nimport * as Mock from './mock-data';\n\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nexport const detail = async (): Promise<Profile> => {\n  if (!withBackend) {\n    return new Promise(r => r(Mock.profile));\n  }\n\n  return RequestWrapper(Stateful.Request.get('/profile'));\n};\n\nexport const update = async (data: Profile): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('profile update', data);\n    return Promise.resolve(true);\n  }\n\n  return UserService.update(data);\n};\n\nexport const passwordUpdate = (\n  oldPassword: string,\n  newPassword: string\n): Promise<boolean> => {\n  if (!withBackend) {\n    console.log('password update', oldPassword, newPassword);\n    return Promise.resolve(true);\n  }\n\n  return RequestWrapper(\n    Stateful.Request.post('/profile/password/change', {\n      old: oldPassword,\n      password: newPassword\n    })\n  );\n};\n","import React from 'react';\n\nimport { Data as D, SimpleUI } from '@nexys/material-components';\n\nimport * as Data from 'interface/profile/data';\nimport * as T from 'interface/profile/type';\n\ninterface Props {\n  data: T.Profile;\n}\n\nconst ProfilePage = ({ data }: Props) => {\n  return (\n    <SimpleUI.ProfilePage<T.Profile>\n      data={data}\n      updateProfilePromise={Data.update}\n      updatePasswordPromise={Data.passwordUpdate}\n    />\n  );\n};\n\nconst ProfilePageLoader = () => {\n  return (\n    <D.Load.WithLoader<T.Profile>\n      dataLoad={Data.detail()}\n      Component={ProfilePage}\n    />\n  );\n};\n\nexport default ProfilePageLoader;\n","import React from 'react';\n\nimport { UI } from '@nexys/material-components';\nimport { appTitle, gitHubRepoUrl } from 'config';\n\nconst shaToUrl = (sha: string) => `${gitHubRepoUrl}/commit/${sha}`;\n\nconst sha: string = process.env.REACT_APP_GIT_SHA || 'sha_placeholder';\n\nconst Footer = () => (\n  <UI.Nav.Footer.Footer>\n    <UI.Nav.Footer.Copyright\n      sha={{ sha, link: shaToUrl(sha) }}\n      company={appTitle}\n    />\n  </UI.Nav.Footer.Footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport UserIcon from '@material-ui/icons/Person';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { appTitle } from 'config';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper\n    // boxShadow: 'none'\n  }\n}));\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const menus = [\n    { link: Links.App.profile, Icon: UserIcon },\n    { link: Links.Public.logout, Icon: LogoutIcon }\n  ];\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      className={classes.appBar}\n      isOpen\n      textColor={theme.palette.primary.main}\n    />\n  );\n};\n","import React from 'react';\n\n// Icon import\nimport Dashboardicon from '@material-ui/icons/Dashboard';\n// end icon\n\nimport { UI, Stateful, Utils } from '@nexys/material-components';\nimport * as Link from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  drawer: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: theme.spacing(8)\n  },\n  menuItem: {\n    color: `${theme.palette.primary.contrastText} !important`\n  },\n  label: {\n    color: 'white'\n  }\n}));\n\ninterface TMenu {\n  link: string;\n  label: React.ReactNode;\n  Icon: any;\n  permission: string;\n}\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu, Divider }\n  }\n} = UI;\n\nconst Label = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  const classes = useStyles();\n\n  return <span className={classes.label}>{children}</span>;\n};\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.App.dashboard,\n    label: <Label>Dashboard</Label>,\n    Icon: Dashboardicon,\n    permission: 'app'\n  }\n];\n\nexport default () => {\n  const classes = useStyles();\n\n  // list of permissions from profile\n  const permissions =\n    Stateful.Credentials.getPermissions().sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    }) || [];\n\n  return (\n    <Drawer\n      isOpen={true}\n      onClose={() => {}}\n      classNames={{ paper: classes.drawer }}\n      hideToggleButton={true}\n    >\n      <Divider />\n      <Menu\n        list={listMain.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport { Utils } from '@nexys/material-components';\n\nimport Footer from '../../admin/layout/footer';\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1\n  },\n  main: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  container: {\n    minHeight: 'calc(100vh - 64px - 72px)', // we need to subtract the height of the topnav and the height of the footer\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nfunction Layout(props: Props) {\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <TopNav />\n      <LeftNav />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n\n          <Footer />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport NotFound from '../public/not-found-404';\nimport Dashboard from './dashboard';\nimport Profile from '../admin/profile';\n\nimport Layout from './layout';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nfunction App(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path={Links.App.dashboard} component={Dashboard} />\n        <Route path={Links.App.profile} component={Profile} />\n\n        <Route path={`${Links.App.base}/`}>\n          <Redirect to={Links.App.dashboard} />\n        </Route>\n        <Route path={Links.App.base} component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(App, 'app'));\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport { UI } from '@nexys/material-components';\n\nconst { Layout } = UI;\n\nconst Dashboard = (): JSX.Element => {\n  return (\n    <Layout.Simple title=\"Dashboard\">\n      <Typography>You're ready to go</Typography>\n    </Layout.Simple>\n  );\n};\n\nexport default Dashboard;\n","import { Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\n\nimport { instanceUuid, withBackend } from 'config';\nimport * as CT from 'interface/crud/type';\nimport * as T from './type';\nimport * as U from './utils';\n\nconst C = new Stateful.RequestUtil.Crud.CrudRequest<T.UserPermissionCrud>(\n  'UserPermission'\n);\nconst CPermissionInstance = new Stateful.RequestUtil.Crud.CrudRequest<CT.PermissionInstance>(\n  'PermissionInstance'\n);\n\nexport const list = async (uuid: Uuid): Promise<T.UserPermission[]> => {\n  if (!withBackend) {\n    return Promise.resolve([\n      { id: 'uuid1', name: 'app', assigned: 'uuid1' },\n      { id: 'uuid2', name: 'admin', assigned: 'uuid2' },\n      { id: 'uuid3', name: 'superadmin', assigned: 'uuid2' }\n    ]);\n  }\n\n  const query = {\n    Permission: {\n      projection: {},\n      references: {\n        PermissionInstance: {\n          projection: { uuid: true, instance: { uuid: true } },\n          filters: { instance: { uuid: instanceUuid } },\n          references: {\n            UserPermission: {\n              projection: { uuid: true },\n              filters: { user: { uuid } }\n            }\n          }\n        }\n      },\n      order: { by: 'name' }\n    }\n  };\n\n  const d = await Stateful.Request.post('/crud/query', query);\n\n  return U.formatAssigned(\n    d.Permission.filter(\n      (x: any) =>\n        x.PermissionInstance &&\n        x.PermissionInstance[0].instance.uuid === instanceUuid\n    )\n  );\n};\n\nexport const insert = async (\n  userUuid: Uuid,\n  permissionUuid: Uuid\n): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const permissionInstance = await CPermissionInstance.detail({\n    permission: { uuid: permissionUuid },\n    instance: { uuid: instanceUuid }\n  });\n\n  const data = {\n    permissionInstance: { uuid: permissionInstance.uuid },\n    user: { uuid: userUuid }\n  };\n\n  return C.insert(data).then(_x => true);\n};\n\nexport const deletePermission = async (\n  userUuid: Uuid,\n  permissionUuid: Uuid\n): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const permissionInstance = await CPermissionInstance.detail({\n    permission: { uuid: permissionUuid },\n    instance: { uuid: instanceUuid }\n  });\n\n  return C.delete({\n    user: { uuid: userUuid },\n    permissionInstance: { uuid: permissionInstance.uuid }\n  }).then(_x => false);\n};\n\nexport const toggle = async (userUuid: Uuid, id: Uuid, assigned: boolean) => {\n  if (!withBackend) {\n    return Promise.resolve(assigned);\n  }\n\n  if (!!assigned) {\n    return deletePermission(String(userUuid), id);\n  }\n\n  return insert(String(userUuid), id);\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Id, Uuid } from '@nexys/utils/dist/types';\nimport * as T from '@nexys/material-components/dist/crud-simple/type';\nimport { BusinessModule, UI } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport * as Data from 'interface/user/data';\nimport * as UT from 'interface/user/type';\nimport * as DataPermission from 'interface/user/permission';\n\nconst { Layout } = UI;\n\nconst permissionInterface = {\n  list: (uuid: Uuid) => DataPermission.list(uuid as Uuid) as any,\n  toggle: (uuid: Uuid, id: Uuid, assigned: boolean) =>\n    DataPermission.toggle(uuid, id, assigned)\n};\n\nconst dataInterface: T.DataInterface<UT.User> = {\n  list: Data.list,\n  detail: Data.detail,\n  insert: Data.insert,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nconst extra = (): T.ExtraUnit<UT.User>[] => [\n  {\n    title: 'Status',\n    Component: (_uuid: Uuid | Id, data: UT.User) => (\n      <BusinessModule.User.Status\n        user={data}\n        pList={Data.statusList()}\n        update={Data.statusUpdate}\n      />\n    )\n  },\n  {\n    title: 'Permissions',\n    tab: 'access-control',\n    width: { xs: 12, sm: 6, md: 6, lg: 6 },\n    Component: (uuid: Uuid | Id) => (\n      <BusinessModule.User.Permissions<Uuid, Uuid>\n        permissionInterface={permissionInterface}\n        uuid={String(uuid)}\n      />\n    )\n  }\n];\n\nexport default () => (\n  <>\n    <Route exact path={Links.Admin.user}>\n      <Layout.Title title=\"Users\" type=\"pageTitle\" />\n    </Route>\n\n    <BusinessModule.User.Crud\n      dataInterface={dataInterface}\n      urlPrefix={Links.Admin.user}\n      extra={extra()}\n    />\n  </>\n);\n","import * as CT from 'interface/crud/type';\nimport * as T from './type';\n\nexport const data: CT.Permission[] = [\n  {\n    uuid: 'uuid1',\n    name: 'app'\n  },\n  {\n    uuid: 'uuid2',\n    name: 'admin'\n  }\n];\n\nexport const permissionInstances: T.PermissionInstanceCrud[] = [\n  {\n    uuid: 'uuid1',\n    permission: { uuid: 'uuid1' },\n    instance: { uuid: 'uuid1' }\n  },\n  {\n    uuid: 'uuid2',\n    permission: { uuid: 'uuid2' },\n    instance: { uuid: 'uuid1' }\n  }\n];\n\nexport const userPermissions: T.UserPermissionCrud[] = [\n  {\n    uuid: 'uuid1',\n    name: 'App',\n    PermissionInstance: [\n      {\n        uuid: 'uuid1'\n      } as CT.PermissionInstance\n    ]\n  }\n];\n","import { Id, Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\n\nimport { withBackend } from 'config';\nimport * as CT from 'interface/crud/type';\nimport * as MockData from './mock-data';\n\nconst C = new Stateful.RequestUtil.Crud.CrudRequest<CT.Permission>(\n  'Permission'\n);\n\nexport const list = async (): Promise<CT.Permission[]> => {\n  if (!withBackend) {\n    return Promise.resolve(MockData.data);\n  }\n\n  return C.list({\n    projection: {},\n    order: { by: 'name' }\n  });\n};\n\nexport const detail = async (id: Id | Uuid): Promise<CT.Permission> => {\n  if (!withBackend) {\n    const item = MockData.data.find(x => x.uuid === id);\n    return Promise.resolve(item || MockData.data[0]);\n  }\n\n  return C.detail({ uuid: String(id) });\n};\n\nexport const insert = async (data: CT.Permission): Promise<{ id: Id }> => {\n  if (!withBackend) {\n    return Promise.resolve({ id: 1 });\n  }\n\n  const id = (await C.insert(data)) as Id;\n  return { id };\n};\n\nexport const update = (data: Partial<CT.Permission>): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  if (!data.uuid) {\n    throw Error('no uuid');\n  }\n\n  return C.update(data, { uuid: data.uuid });\n};\n\nexport const deleteById = async (id: Id | Uuid): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const r = await C.delete({ uuid: String(id) });\n  return r > 0;\n};\n","import React from 'react';\n\nimport * as T from '@nexys/material-components/dist/crud-simple/type';\nimport { Type } from '@nexys/material-components/dist/business-module/permission';\nimport { BusinessModule } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport * as Data from 'interface/permission/data';\n\nconst dataInterface: T.DataInterface<Type.Permission> = {\n  list: Data.list as any,\n  detail: Data.detail as any,\n  insert: Data.insert as any,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nexport default () => {\n  const urlPrefix = Links.SuperAdmin.permission;\n\n  return (\n    <BusinessModule.Permission.Crud\n      dataInterface={dataInterface}\n      urlPrefix={urlPrefix}\n    />\n  );\n};\n","import * as CT from 'interface/crud/type';\nimport * as T from './type';\n\nexport const postProcessing = (instance: CT.Instance): T.Instance => {\n  return {\n    ...instance,\n    dateAdded: new Date(instance.dateAdded)\n  };\n};\n","import * as CT from 'interface/crud/type';\n\nexport const data: CT.Instance[] = [\n  {\n    uuid: 'uuid1',\n    name: 'Instance #1',\n    dateAdded: new Date('2021-01-10T13:45:00Z')\n  },\n  {\n    uuid: 'uuid2',\n    name: 'Instance #2',\n    dateAdded: new Date('2021-02-01T10:45:00Z')\n  }\n];\n","import { Id, Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\nimport { withBackend } from 'config';\n\nimport * as CT from 'interface/crud/type';\nimport * as T from './type';\nimport * as U from './utils';\nimport * as MockData from './mock-data';\n\nconst C = new Stateful.RequestUtil.Crud.withUuid<CT.Instance>('Instance');\nconst {\n  RequestUtil: {\n    Wrapper: { RequestWrapper }\n  }\n} = Stateful;\n\nexport const list = async (): Promise<T.Instance[]> => {\n  if (!withBackend) {\n    return Promise.resolve(MockData.data.map(d => U.postProcessing(d)));\n  }\n\n  const re = await RequestWrapper(C.list({ projection: {} }));\n\n  return re.map(d => U.postProcessing(d));\n};\n\nexport const insert = async (\n  data: Partial<T.Instance>\n): Promise<{ id: Id | Uuid }> => {\n  if (!withBackend) {\n    return Promise.resolve({ id: 'uuid1' });\n  }\n\n  const dataForBackend: Omit<CT.Instance, 'uuid'> = {\n    name: data.name!,\n    dateAdded: new Date()\n  };\n\n  const re = await RequestWrapper(C.insertByUuid(dataForBackend));\n  return { id: re.uuid };\n};\n\nexport const detail = async (id: Id | Uuid): Promise<T.Instance> => {\n  if (!withBackend) {\n    const item = MockData.data.find(x => x.uuid === id);\n    return Promise.resolve(U.postProcessing(item || MockData.data[0]));\n  }\n\n  const re = await RequestWrapper(C.detail({ uuid: String(id) }));\n  return U.postProcessing(re);\n};\n\nexport const update = (data: Partial<T.Instance>): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  const dataForBackend: CT.Instance = {\n    uuid: data.uuid!,\n    name: data.name!,\n    dateAdded: data.dateAdded!\n  };\n\n  return RequestWrapper(C.updateByUuid(dataForBackend));\n};\n\nexport const deleteById = (id: Id | Uuid): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return Promise.resolve(true);\n};\n","import * as BT from '@nexys/material-components/dist/business-module/user/type';\nimport { Uuid } from '@nexys/material-components/dist/common/type';\nimport * as T from './type';\n\nexport const postProcessing = (\n  item: T.UserPermissionCrud\n): BT.UserPermission<Uuid> => {\n  return {\n    id: item.uuid,\n    name: item.name,\n    assigned: item.PermissionInstance && item.PermissionInstance[0].uuid\n  };\n};\n","import * as BT from '@nexys/material-components/dist/business-module/user/type';\nimport { Uuid } from '@nexys/material-components/dist/common/type';\nimport { Stateful } from '@nexys/material-components';\n\nimport { withBackend } from 'config';\nimport * as CT from 'interface/crud/type';\nimport * as T from './type';\nimport * as U from './utils';\nimport * as MockData from './mock-data';\n\nconst CPermissionInstance = new Stateful.RequestUtil.Crud.CrudRequest<T.PermissionInstanceCrud>(\n  'PermissionInstance'\n  // '/crud/query/admin',\n  // '/crud/mutate/admin'\n);\nconst CPermission = new Stateful.RequestUtil.Crud.CrudRequest<CT.Permission>(\n  'Permission'\n  // '/crud/query/admin',\n  // '/crud/mutate/admin'\n);\n\nexport const listAssign = async (\n  instanceUuid: Uuid\n): Promise<BT.UserPermission<Uuid>[]> => {\n  if (!withBackend) {\n    return Promise.resolve(\n      MockData.userPermissions.map(a => U.postProcessing(a))\n    );\n  }\n\n  const params = {\n    projection: {},\n    references: {\n      PermissionInstance: {\n        filters: {\n          instance: {\n            uuid: instanceUuid\n          }\n        }\n      }\n    }\n  };\n\n  const d = await CPermission.list<T.UserPermissionCrud>(params);\n\n  return d\n    .map(a => U.postProcessing(a))\n    .sort((a, b) => (a.name > b.name ? 1 : -1));\n};\n\nconst insert = async (\n  instanceUuid: Uuid,\n  permissionId: Uuid\n): Promise<boolean> => {\n  const data = {\n    permission: { uuid: permissionId },\n    instance: { uuid: instanceUuid }\n  };\n\n  return CPermissionInstance.insert(data).then(_x => true);\n};\n\nconst deletePermission = async (\n  instanceUuid: Uuid,\n  permissionId: Uuid\n): Promise<boolean> => {\n  const filters = {\n    permission: { uuid: permissionId },\n    instance: { uuid: instanceUuid }\n  };\n\n  return CPermissionInstance.delete(filters).then(_x => false);\n};\n\nexport const toggle = async (\n  instanceUuid: Uuid,\n  permissionId: Uuid,\n  assigned: boolean\n) => {\n  if (!!assigned) {\n    return deletePermission(instanceUuid, permissionId);\n  }\n\n  return insert(instanceUuid, permissionId);\n};\n","import * as UserManagement from '@nexys/material-components/dist/business-module/user';\nimport * as TC from '@nexys/material-components/dist/crud-simple/type';\nimport { Id, Uuid } from '@nexys/material-components/dist/common/type';\n\nimport * as Data from 'interface/user/data';\nimport * as DataPermission from 'interface/user/permission';\nimport * as DataFile from 'interface/file/data';\n\nexport const dataInterface: TC.DataInterface<UserManagement.Type.User> = {\n  list: Data.list,\n  detail: Data.detail,\n  insert: Data.insert,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nexport const permissionsInterface = {\n  list: DataPermission.list,\n  toggle: DataPermission.toggle\n};\n\nexport const statusList = Data.statusList();\n\nexport const updateStatus = Data.statusUpdate;\n\nexport const fileList = (uuid: Uuid | Id) => DataFile.listByUser(String(uuid));\n\nexport const userAuthenticationDataInterface: TC.DataInterface<UserManagement.Type.AuthenticationMethod> = {\n  list: () => Promise.resolve([]),\n  detail: (id: Id | Uuid) => {\n    // const item = F.authenticationMethods.find(i => i.id === Number(id));\n    // return Promise.resolve(item || F.authenticationMethods[0]);\n    return Promise.resolve({} as any);\n  },\n  insert: (\n    data: Omit<UserManagement.Type.AuthenticationMethod, 'id' | 'uuid'>\n  ) => Promise.resolve({ id: 1 }),\n  update: d => Promise.resolve(true),\n  deleteById: d => Promise.resolve(true)\n};\n","import React from 'react';\n\nimport * as TC from '@nexys/material-components/dist/crud-simple/type';\nimport { Uuid, Id } from '@nexys/material-components/dist/common/type';\nimport { BusinessModule } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport {\n  dataInterface,\n  permissionsInterface,\n  statusList,\n  updateStatus,\n  // fileList,\n  userAuthenticationDataInterface\n} from './data';\n\ntype U = BusinessModule.User.Type.User;\n\nconst extra: TC.ExtraUnit<U>[] = [\n  {\n    title: 'Status',\n    Component: (_uuid: Uuid | Id, data: U) => (\n      <BusinessModule.User.Status\n        user={data}\n        pList={statusList}\n        update={updateStatus}\n      />\n    )\n  },\n  {\n    title: 'Authentication Methods',\n    Component: (uuid: Uuid | Id) => (\n      <BusinessModule.User.Authentications\n        dataInterface={userAuthenticationDataInterface}\n        urlPrefix={`/ux/user/${uuid}/detail`}\n      />\n    )\n  },\n  {\n    title: 'Access Control',\n    tab: 'Access-Control',\n    width: { xs: 12, sm: 12, md: 12, lg: 12 },\n    Component: uuid => (\n      <BusinessModule.User.Permissions<Uuid, Uuid>\n        uuid={String(uuid)}\n        permissionInterface={permissionsInterface}\n      />\n    )\n  }\n  // {\n  //   tab: 'Files',\n  //   title: 'Files',\n  //   Component: uuid => (\n  //     <BusinessModule.User.Files uuid={String(uuid)} dataLoad={fileList} />\n  //   )\n  // }\n];\n\ninterface Props {\n  uuid: Uuid;\n}\n\nexport default ({ uuid }: Props) => (\n  <BusinessModule.User.Crud\n    urlPrefix={`${Links.SuperAdmin.instance}/${uuid}/Users`}\n    dataInterface={dataInterface}\n    extra={extra}\n  />\n);\n\n// export default () => <p>Users</p>;\n","import React from 'react';\n\nimport * as TC from '@nexys/material-components/dist/crud-simple/type';\nimport {\n  Crud,\n  Permissions,\n  Type\n} from '@nexys/material-components/dist/business-module/instance';\nimport { Id, Uuid } from '@nexys/material-components/dist/common/type';\n\nimport * as Links from 'common/link';\nimport * as Data from 'interface/instance/data';\nimport * as DataPermissionInstance from 'interface/permission/instance';\nimport User from './user';\n\nconst dataInterface: TC.DataInterface<Type.Instance> = {\n  list: Data.list,\n  detail: Data.detail,\n  insert: Data.insert,\n  update: Data.update,\n  deleteById: Data.deleteById\n};\n\nexport const permissionsInterface = (uuid: Uuid) => ({\n  list: () => DataPermissionInstance.listAssign(uuid) as any, // There's 1 mistake in the typing in the package hence we need any\n  toggle: DataPermissionInstance.toggle\n});\n\nconst extra: TC.ExtraUnit<Type.Instance>[] = [\n  {\n    tab: 'Users',\n    width: { xs: 12, sm: 12, md: 12, lg: 12 },\n    Component: (uuid: string | number) => <User uuid={String(uuid)} />,\n    paper: false\n  },\n  {\n    tab: 'Permissions',\n    title: 'Permissions associated with Instance',\n    width: { xs: 12, sm: 12, md: 12, lg: 12 },\n    Component: (uuid: Uuid | Id) => (\n      <Permissions<Uuid, Uuid>\n        uuid={String(uuid)}\n        permissionInterface={permissionsInterface(String(uuid))}\n      />\n    )\n  }\n];\n\nexport default () => (\n  <Crud\n    urlPrefix={Links.SuperAdmin.instance}\n    dataInterface={dataInterface}\n    extra={extra}\n  />\n);\n","import * as ET from '@nexys/material-components/dist/entity-generator/type';\n\nexport const entities: ET.Entity[] = [\n  {\n    name: 'UserPermission',\n    table: 'user_permission',\n    uuid: true,\n    fields: [\n      {\n        type: 'PermissionInstance',\n        name: 'permissionInstance',\n        column: 'permission_instance_id',\n        optional: false\n      },\n      {\n        type: 'User',\n        name: 'user',\n        column: 'user_id',\n        optional: false\n      }\n    ]\n  },\n  {\n    name: 'UserAuthenticationType',\n    table: 'user_authentication_type',\n    uuid: false,\n    fields: [\n      {\n        type: 'String',\n        name: 'name',\n        optional: false\n      }\n    ]\n  },\n  {\n    name: 'UserStatus',\n    table: 'user_status',\n    uuid: false,\n    fields: [\n      {\n        type: 'String',\n        name: 'name',\n        optional: false\n      }\n    ]\n  },\n  {\n    name: 'UserAuthentication',\n    table: 'user_authentication',\n    uuid: true,\n    fields: [\n      {\n        type: 'String',\n        name: 'value',\n        optional: false\n      },\n      {\n        type: 'Boolean',\n        name: 'isEnabled',\n        optional: false\n      },\n      {\n        type: 'UserAuthenticationType',\n        name: 'type',\n        column: 'type_id',\n        optional: false\n      },\n      {\n        type: 'User',\n        name: 'user',\n        column: 'user_id',\n        optional: false\n      }\n    ]\n  },\n  {\n    name: 'PermissionInstance',\n    table: 'permission_instance',\n    uuid: true,\n    fields: [\n      {\n        type: 'Instance',\n        name: 'instance',\n        column: 'instance_id',\n        optional: false\n      },\n      {\n        type: 'Permission',\n        name: 'permission',\n        column: 'permission_id',\n        optional: false\n      }\n    ]\n  },\n  {\n    name: 'Permission',\n    table: 'permission',\n    uuid: true,\n    fields: [\n      {\n        type: 'String',\n        name: 'name',\n        optional: false\n      }\n    ]\n  },\n  {\n    name: 'User',\n    table: 'user',\n    uuid: true,\n    fields: [\n      {\n        type: 'String',\n        name: 'firstName',\n        optional: false\n      },\n      {\n        type: 'String',\n        name: 'lastName',\n        optional: false\n      },\n      {\n        type: 'String',\n        name: 'email',\n        optional: false\n      },\n      {\n        type: 'UserStatus',\n        name: 'status',\n        column: 'status_id',\n        optional: false\n      },\n      {\n        type: 'LocalDateTime',\n        name: 'logDateAdded',\n        optional: false\n      },\n      {\n        type: 'Instance',\n        name: 'instance',\n        column: 'instance_id',\n        optional: false\n      },\n      {\n        type: 'String',\n        name: 'lang',\n        optional: false\n      }\n    ]\n  },\n  {\n    name: 'Instance',\n    table: 'instance',\n    uuid: true,\n    fields: [\n      {\n        type: 'String',\n        name: 'name',\n        optional: false\n      },\n      {\n        type: 'LocalDateTime',\n        name: 'dateAdded',\n        optional: false\n      }\n    ]\n  }\n];\n","import * as ET from '@nexys/material-components/dist/entity-generator/type';\n\nexport const data: ET.EntityMockData = {\n  Instance: {\n    list: [\n      {\n        uuid: 'uuid1',\n        name: 'Mock Instance #1',\n        dateAdded: '2021-01-02T14:15:00Z'\n      },\n      {\n        uuid: 'uuid2',\n        name: 'Mock Instance #2',\n        dateAdded: '2021-01-05T16:22:00Z'\n      }\n    ]\n  },\n  User: {\n    list: [\n      {\n        uuid: 'user-uuid-1',\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'john.doe@example.com',\n        status: { id: 1 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      },\n      {\n        uuid: 'user-uuid-2',\n        firstName: 'Jane',\n        lastName: 'Doe',\n        email: 'jane.doe@example.com',\n        status: { id: 2 },\n        instance: {\n          uuid: 'uuid1'\n        },\n        lang: 'en'\n      }\n    ]\n  },\n  Permission: {\n    list: [\n      {\n        uuid: 'permission-uuid-1',\n        name: 'app'\n      },\n      {\n        uuid: 'permission-uuid-2',\n        name: 'admin'\n      },\n      {\n        uuid: 'permission-uuid-3',\n        name: 'superadmin'\n      }\n    ]\n  },\n  PermissionInstance: {\n    list: [\n      {\n        uuid: 'permission-instance-uuid-1',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-1'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-2',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-2'\n        }\n      },\n      {\n        uuid: 'permission-instance-uuid-3',\n        instance: {\n          uuid: 'uuid1'\n        },\n        permission: {\n          uuid: 'permission-uuid-3'\n        }\n      }\n    ]\n  }\n};\n","import React from 'react';\n\nimport EntityGenerator from '@nexys/material-components/dist/entity-generator';\n\nimport { withBackend } from 'config';\nimport * as Links from 'common/link';\nimport { entities } from 'interface/crud/def';\nimport * as MockData from 'interface/crud/mock-data';\n\nconst MyEntityGenerator = (): JSX.Element => {\n  return (\n    <EntityGenerator\n      entities={entities}\n      urlPrefix={Links.SuperAdmin.entity}\n      withBackend={withBackend}\n      mockData={MockData.data}\n    />\n  );\n};\n\nexport default MyEntityGenerator;\n","import React from 'react';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport UserIcon from '@material-ui/icons/Person';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\nimport { appTitle } from 'config';\n\nconst {\n  Nav: { Top }\n} = UI;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  appBar: {\n    backgroundColor: theme.palette.background.paper\n    // boxShadow: 'none'\n  }\n}));\n\nexport default () => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const menus = [\n    { link: Links.Admin.profile, Icon: UserIcon },\n    { link: Links.Public.logout, Icon: LogoutIcon }\n  ];\n\n  return (\n    <Top\n      title={appTitle}\n      menus={menus}\n      className={classes.appBar}\n      isOpen\n      textColor={theme.palette.primary.main}\n    />\n  );\n};\n","import React from 'react';\n\n// Icon import\nimport {\n  Dashboard as DashboardIcon,\n  Group as InvestorIcon,\n  VpnKey as PermissionIcon,\n  Storage as InstanceIcon,\n  AccountTree as EntityIcon\n} from '@material-ui/icons';\n// end icon\n\nimport { UI, Stateful, Utils } from '@nexys/material-components';\nimport * as Link from 'common/link';\n\nconst UserIcon = InvestorIcon;\n\nconst useStyles = Utils.makeStyles(theme => ({\n  drawer: {\n    backgroundColor: theme.palette.primary.main,\n    paddingTop: theme.spacing(8)\n  },\n  menuItem: {\n    color: `${theme.palette.primary.contrastText} !important`\n  },\n  label: {\n    color: 'white'\n  }\n}));\n\ninterface TMenu {\n  link: string;\n  label: React.ReactNode;\n  Icon: any;\n  permission: string;\n}\n\nconst {\n  Nav: {\n    Left: { Drawer, Menu, Divider }\n  }\n} = UI;\n\nconst permission = 'admin';\nconst superAdminPermission = 'superadmin';\n\nconst Label = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  const classes = useStyles();\n\n  return <span className={classes.label}>{children}</span>;\n};\n\nconst listMain: TMenu[] = [\n  {\n    link: Link.Admin.dashboard,\n    label: <Label>Dashboard</Label>,\n    Icon: DashboardIcon,\n    permission\n  },\n  {\n    link: Link.Admin.user,\n    label: <Label>Users</Label>,\n    Icon: UserIcon,\n    permission\n  }\n];\n\nconst listSuperAdmin: TMenu[] = [\n  {\n    link: Link.SuperAdmin.permission,\n    label: <Label>Permissions</Label>,\n    Icon: PermissionIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.instance,\n    label: <Label>Instance</Label>,\n    Icon: InstanceIcon,\n    permission: superAdminPermission\n  },\n  {\n    link: Link.SuperAdmin.entity,\n    label: <Label>Entities</Label>,\n    Icon: EntityIcon,\n    permission: superAdminPermission\n  }\n];\n\nexport default () => {\n  const classes = useStyles();\n\n  // list of permissions from profile\n  const permissions =\n    Stateful.Credentials.getPermissions().sort((a: string, b: string) => {\n      if (a < b) {\n        return -1;\n      }\n\n      if (a > b) {\n        return 1;\n      }\n\n      return 0;\n    }) || [];\n\n  return (\n    <Drawer\n      isOpen={true}\n      onClose={() => {}}\n      classNames={{ paper: classes.drawer }}\n      hideToggleButton={true}\n    >\n      <Divider />\n      <Menu\n        list={listMain.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n\n      <Divider />\n      <Menu\n        list={listSuperAdmin.filter(x => permissions.includes(x.permission))}\n        classNames={{ icon: classes.menuItem, item: classes.menuItem }}\n      />\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Utils } from '@nexys/material-components';\n\nimport TopNav from './top-nav';\nimport LeftNav from './left-nav';\nimport Footer from './footer';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1\n  },\n  main: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  container: {\n    minHeight: 'calc(100vh - 64px - 72px)', // we need to subtract the height of the topnav and the height of the footer\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\ninterface Props {\n  children: React.ReactElement;\n}\n\nfunction Layout(props: Props) {\n  const classes = useStyles();\n\n  const { children } = props;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <TopNav />\n      <LeftNav />\n\n      <div className={classes.content}>\n        <main className={classes.main}>\n          <div className={classes.appBarSpacer} />\n\n          <Container maxWidth=\"lg\" className={classes.container}>\n            {children}\n          </Container>\n\n          <Footer />\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport { Stateful, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nimport Dashboard from './dashboard';\nimport User from './user';\nimport Permission from './permission';\nimport Instance from './instance';\nimport Profile from './profile';\nimport NotFound from '../public/not-found-404';\nimport EntityGenerator from './entity-generator';\n\nimport Layout from './layout';\n\nconst {\n  Auth: { Wrapper },\n  Conf: { REDIRECT_URI }\n} = Stateful;\n\nfunction Admin(props: RouteComponentProps) {\n  const handleOnIdle = () => {\n    Stateful.Store.set('sessionExpired', true);\n    Stateful.Store.set(REDIRECT_URI, props.location.pathname);\n    window.location.pathname = Links.Public.logout;\n  };\n\n  Utils.useIdleTimer(handleOnIdle, 60);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route\n          path={Links.Admin.dashboard}\n          component={Dashboard}\n          props={props}\n        />\n        <Route path={Links.Admin.user} component={User} props={props} />\n        <Route\n          path={Links.SuperAdmin.permission}\n          component={Permission}\n          props={props}\n        />\n        <Route\n          path={Links.SuperAdmin.instance}\n          component={Instance}\n          props={props}\n        />\n\n        <Route path={Links.Admin.profile} component={Profile} />\n        <Route path={Links.SuperAdmin.entity} component={EntityGenerator} />\n\n        <Route path={`${Links.Admin.base}/`}>\n          <Redirect to={Links.Admin.dashboard} />\n        </Route>\n        <Route path={Links.Admin.base} component={NotFound} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default withRouter(Wrapper(Admin, 'admin'));\n","export const profile = {\n  id: '42010aac0033',\n  uuid: '42010aac0033',\n  firstName: 'John',\n  lastName: 'Doe',\n  email: 'john.doe@example.com',\n  lang: 'en',\n  instance: { uuid: '11eb-9846', name: 'Mock Instance' }\n};\n\nexport const locale = { id: 1, name: 'en' };\n\nexport const permissions = ['app', 'admin', 'superadmin'];\n","import { Stateful } from '@nexys/material-components';\n\nimport { withBackend } from 'config';\nimport * as MockData from './mock-data';\nimport * as T from './type';\n\nexport const login = async (data: Partial<T.User>): Promise<boolean> => {\n  if (!withBackend) {\n    Stateful.Credentials.set(\n      MockData.profile,\n      MockData.permissions,\n      MockData.locale.name\n    );\n\n    return Promise.resolve(true);\n  }\n\n  const re = await Stateful.Request.post('/login', data);\n  Stateful.Credentials.set(re.profile, re.permissions, re.locale.name);\n\n  return true;\n};\n\nexport const logout = (): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return Stateful.Request.get('/login/logout');\n};\n\nexport const signUp = (data: T.User): Promise<boolean> => {\n  if (!withBackend) {\n    return Promise.resolve(true);\n  }\n\n  return Stateful.Request.post('/login/signup', data);\n};\n","import styled from 'styled-components';\n\nconst ErrorContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  background-color: white;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\n  border-radius: 7px;\n  margin-bottom: 30px;\n  padding: 24px;\n`;\n\nconst ErrorMessage = styled.p`\n  background-color: rgba(256, 256, 256);\n  text-align: 'center';\n`;\n\nexport { ErrorContainer, ErrorMessage };\n","import React from 'react';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport { ErrorContainer, ErrorMessage } from './error.styles';\n\nconst { Store } = Stateful;\n\ninterface Props {\n  children: React.ReactNode | JSX.Element;\n  name: string;\n}\n\nconst Error = (props: Props) => {\n  const { name, children } = props;\n\n  if (Store.get(name) !== true) {\n    return null;\n  }\n\n  Store.remove(name);\n  console.log(name);\n\n  return (\n    <ErrorContainer>\n      <ErrorMessage role=\"alert\">{children}</ErrorMessage>\n    </ErrorContainer>\n  );\n};\n\nexport default Error;\n","import Error from './error';\n\nexport default Error;\n","import React from 'react';\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(-3)\n  },\n  contentContainer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4),\n    width: '60%'\n  },\n  title: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  },\n  titleContainer: {\n    textAlign: 'center'\n  },\n  icon: {\n    color: theme.palette.success.main\n  },\n  divider: {\n    margin: theme.spacing(4, 'auto'),\n    maxWidth: '90%'\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  }\n}));\n\nconst { Link } = UI;\n\nconst ExtraContent = (): JSX.Element => {\n  const classes = useStyles();\n\n  const benefits: string[] = [\n    'Lorem ipsum dolor sit amet',\n    'Nulla orci urna, feugiat convallis iaculis non',\n    'Maecenas sagittis blandit ex, sed condimentum'\n  ];\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.contentContainer}>\n        <div className={classes.titleContainer}>\n          <Typography component=\"h2\" className={classes.title}>\n            Join the community\n          </Typography>\n        </div>\n\n        {benefits.map((b, i) => (\n          <List key={`benefit-${i}`}>\n            <ListItem>\n              <ListItemIcon>\n                <CheckIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText>{b}</ListItemText>\n            </ListItem>\n          </List>\n        ))}\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Typography>\n            Don't have an account yet?{' '}\n            <Link to={Links.Public.signUp} className={classes.link}>\n              Sign up now\n            </Link>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExtraContent;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport { useHistory } from 'react-router-dom';\n\nimport { Field } from '@nexys/material-components/dist/simple-ui/form-simple/type';\nimport { SimpleUI, UI, Utils } from '@nexys/material-components';\n\nimport { appTitle } from 'config';\nimport * as Links from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as Data from 'interface/login/data';\nimport { Error, ExtraContent } from './partials';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    maxWidth: '400px',\n    margin: '0 auto'\n  },\n  divider: {\n    margin: theme.spacing(4, 0)\n  },\n  linkContainer: {\n    textAlign: 'center'\n  }\n}));\n\nconst { Layout, Link } = UI;\n\nconst Login = (): JSX.Element => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const fields: Field<T.User>[] = [\n    {\n      label: 'Email Address',\n      name: 'email',\n      type: 'string'\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'string',\n      ux: 'password'\n    }\n  ];\n\n  const initialValues: T.User = {\n    email: '',\n    password: ''\n  };\n\n  const handleLogin = (data: any) => {\n    return Data.login(data).then(r => {\n      history.push(Links.App.dashboard);\n    });\n  };\n\n  return (\n    <Layout.Login\n      title={`Login to ${appTitle}`}\n      layout=\"left\"\n      otherContent={<ExtraContent />}\n    >\n      <div className={classes.container}>\n        <Error name=\"notifLogout\">You were successfully logged out.</Error>\n        <Error name=\"sessionExpired\">\n          Your session expired. Please login again to continue where you left\n          off.\n        </Error>\n\n        <SimpleUI.FormSimple<T.User>\n          data={initialValues}\n          fields={fields}\n          promise={handleLogin}\n          submitLabel=\"Login\"\n          message={{\n            success: 'Logged in successfully',\n            error: 'Error while trying to login'\n          }}\n        />\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Link to={Links.Public.forgotYourPassword}>\n            Forgot Your Password?\n          </Link>\n        </div>\n      </div>\n    </Layout.Login>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Stateful } from '@nexys/material-components';\n\nimport * as Data from 'interface/login/data';\nimport * as Links from 'common/link';\n\nconst { Credentials, Store } = Stateful;\n\nexport default () => {\n  useEffect(() => {\n    Data.logout();\n    Credentials.remove();\n\n    // so we wouldn't show both messages\n    if (!Store.get('sessionExpired')) {\n      Store.set('notifLogout', true);\n    }\n  }, []);\n\n  return <Redirect to={Links.Public.base} />;\n};\n","import React from 'react';\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { UI, Utils } from '@nexys/material-components';\nimport * as Links from 'common/link';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(-3)\n  },\n  contentContainer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4),\n    width: '60%'\n  },\n  title: {\n    color: theme.palette.secondary.main,\n    fontSize: theme.typography.h5.fontSize,\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(2)\n  },\n  titleContainer: {\n    textAlign: 'center'\n  },\n  icon: {\n    color: theme.palette.success.main\n  },\n  divider: {\n    margin: theme.spacing(4, 'auto'),\n    maxWidth: '90%'\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  }\n}));\n\nconst { Link } = UI;\n\nconst ExtraContent = (): JSX.Element => {\n  const classes = useStyles();\n\n  const benefits: string[] = [\n    'Lorem ipsum dolor sit amet',\n    'Nulla orci urna, feugiat convallis iaculis non',\n    'Maecenas sagittis blandit ex, sed condimentum'\n  ];\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.contentContainer}>\n        <div className={classes.titleContainer}>\n          <Typography component=\"h2\" className={classes.title}>\n            Join the Community\n          </Typography>\n        </div>\n\n        {benefits.map((b, i) => (\n          <List key={`benefit-${i}`}>\n            <ListItem>\n              <ListItemIcon>\n                <CheckIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText>{b}</ListItemText>\n            </ListItem>\n          </List>\n        ))}\n\n        <Divider className={classes.divider} />\n\n        <div className={classes.linkContainer}>\n          <Typography>\n            Already have an account?{' '}\n            <Link to={Links.Public.login} className={classes.link}>\n              Login\n            </Link>\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExtraContent;\n","import React, { useState } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Field } from '@nexys/material-components/dist/simple-ui/form-simple/type';\nimport { SimpleUI, UI, Utils } from '@nexys/material-components';\n\nimport { appTitle } from 'config';\nimport * as Links from 'common/link';\nimport * as T from 'interface/login/type';\nimport * as Data from 'interface/login/data';\nimport { ExtraContent } from './partials';\n\nconst useStyles = Utils.makeStyles(theme => ({\n  container: {\n    maxWidth: '400px',\n    margin: '0 auto'\n  },\n  message: {\n    textAlign: 'center'\n  },\n  link: {\n    color: theme.palette.secondary.main\n  },\n  intro: {\n    marginTop: theme.spacing(-2),\n    textAlign: 'center',\n\n    '& strong': {\n      color: theme.palette.secondary.main\n    }\n  },\n  linkContainer: {\n    textAlign: 'center'\n  },\n  divider: {\n    margin: theme.spacing(4, 0)\n  }\n}));\n\nconst { Layout, Link } = UI;\n\nconst Login = (): JSX.Element => {\n  const [state, setState] = useState<'default' | 'signUp'>('default');\n  const classes = useStyles();\n\n  const fields: Field<T.SignUpUser>[] = [\n    {\n      label: 'First Name',\n      name: 'firstName',\n      type: 'string'\n    },\n    {\n      label: 'Last Name',\n      name: 'lastName',\n      type: 'string'\n    },\n    {\n      label: 'Email Address',\n      name: 'email',\n      type: 'string'\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'string',\n      ux: 'password'\n    }\n  ];\n\n  const initialValues: T.SignUpUser = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  };\n\n  const handleSignUp = (data: any) => {\n    return Data.signUp(data).then(r => {\n      setState('signUp');\n      return true;\n    });\n  };\n\n  return (\n    <Layout.Login\n      title=\"Create Your Account\"\n      layout=\"left\"\n      otherContent={<ExtraContent />}\n    >\n      <div className={classes.container}>\n        {state === 'signUp' ? (\n          <Typography className={classes.message}>\n            You signed up successfully.{' '}\n            <Link to={Links.Public.login} className={classes.link}>\n              Login here\n            </Link>\n          </Typography>\n        ) : (\n          <>\n            <Typography className={classes.intro}>\n              to join <strong>{appTitle}</strong>\n            </Typography>\n            <SimpleUI.FormSimple<T.SignUpUser>\n              data={initialValues}\n              fields={fields}\n              promise={handleSignUp}\n              submitLabel=\"Sign Up\"\n              message={{\n                success: 'Signed up successfully',\n                error: 'Error while trying to sign up'\n              }}\n            />\n            <Divider className={classes.divider} />\n\n            <div className={classes.linkContainer}>\n              <Link to={Links.Public.login}>Back to Login</Link>\n            </div>\n          </>\n        )}\n      </div>\n    </Layout.Login>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  withRouter,\n  RouteComponentProps\n} from 'react-router-dom';\n\nimport * as Links from '../common/link';\nimport Login from './login';\nimport Logout from './logout';\nimport SignUp from './sign-up';\n\nfunction Public(props: RouteComponentProps) {\n  return (\n    <Switch>\n      <Route path={Links.Public.login} component={Login} props={props} />\n      <Route path={Links.Public.logout} component={Logout} props={props} />\n      <Route path={Links.Public.signUp} component={SignUp} props={props} />\n      <Route path={Links.Public.base}>\n        <Redirect to={Links.Public.login} />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default withRouter(Public);\n","import React from 'react';\n\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Router,\n  RouteComponentProps\n} from 'react-router-dom';\nimport * as History from 'history';\n\nimport { SnackbarProvider } from '@nexys/material-components';\n\nimport * as Links from 'common/link';\nimport App from './app';\nimport Admin from './admin';\nimport Public from './public';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || ''\n});\n\nconst MyRouter = (props: RouteComponentProps) => {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <Switch>\n        <Route path={Links.App.base} component={App} props={props} />\n        <Route path={Links.Admin.base} component={Admin} props={props} />\n        <Route path={Links.Public.base} component={Public} props={props} />\n      </Switch>\n    </SnackbarProvider>\n  );\n};\n\nconst R = withRouter(MyRouter);\n\nexport default () => (\n  <Router history={history}>\n    <R />\n  </Router>\n);\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#5691ff'\n    },\n    secondary: {\n      main: '#ff5691'\n    },\n    background: {\n      default: '#f5f5f5'\n    },\n    success: {\n      main: '#91ff56'\n    }\n  }\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AppRouter from './router';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from '@nexys/material-components';\n\nReactDOM.render(\n  <ThemeProvider theme={theme} withCssBaseline>\n    <AppRouter />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}